/*
 * File: app/view/menu/menuPanelViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Evcorp.view.callcar.callCarDolistWinViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.callCarDolistWin',
//	onAddClick : function() {
//	var AddPricePanel = Ext.create({
//		xtype : 'intentionorderwin',
//		closeAction : 'destroy'
//	});
//	AddPricePanel.show();
//},
    onProviderSearch : function() {
    	var providerWin = Ext.create({
    		xtype : 'providerListWin',
    		width : '60%',
    		height: '60%',
    		closeAction : 'destroy'
    	});
    	providerWin.show();
    },
	onCreateClaimRule : function() {
		var gridStore = this.getView().getViewModel().getStore('callCarDemandDetailStore');
		var record = gridStore.getAt(0);
		if(record!=null&&record.data.carProductCode!=null&&record.data.quantity!=null&&record.data.unitPrice!=null){
			var accModel = new Evcorp.model.CallCarDemandDetail({
				carProductCode:'',
				id:null
			});
			gridStore.insert(0,accModel);
			var callCarDemandDetailGrid = this.lookupReference('callCarDemandDetailGrid');
			callCarDemandDetailGrid.editingPlugin.startEditByPosition({
		        row: 0,
		        column: 0
		    });
		}else if(record==null){
			var accModel = new Evcorp.model.CallCarDemandDetail({
				carProductCode:''
			});
			gridStore.insert(0,accModel);
			var callCarDemandDetailGrid = this.lookupReference('callCarDemandDetailGrid');
			callCarDemandDetailGrid.editingPlugin.startEditByPosition({
		        row: 0,
		        column: 0
		    });
		}else{
			Ext.Msg.alert('提示','表格中存在空字段');
		}
	},
    saveCallCar:function(){
    	var win = this.getView();
    	var form = this.lookupReference('callCarForm');
    	var isValid = form.getForm().isValid();
    	var callCarDemandDetailGrid = this.lookupReference('callCarDemandDetailGrid');
    	var callCarDemandDetailStore = callCarDemandDetailGrid.getStore();
    	var gridData = callCarDemandDetailGrid.getStore().getData().items;
    	var callCarDemandGrid = Ext.ComponentQuery.query("#callCarDemandGridId")[0];
    	var callCarDemandStore = callCarDemandGrid.getStore();
    	var detailItems = [];
    	Ext.each(gridData,function(item){
    		detailItems.push(item.data);
		});
    	var details = JSON.stringify(detailItems);
    	var record = callCarDemandDetailStore.getAt(0);
    	var detailValid = false;
		if(record!=null&&record.data.carProductCode!=null&&record.data.quantity!=null&&record.data.unitPrice!=null&&record.data.carUsage!=null)
			detailValid = true;
    	if(isValid&&detailValid){
    		form.submit({
				submitEmptyText:false,
				params:{detailsString:details},
	        	success: function(form, action){
		        	if(action.result.info == 'success'){
		        		Ext.Msg.alert("提示",'保存成功。',function(){
		        			win.close();
		        			callCarDemandStore.loadPage(1 ,{"start":0,"limit":10});
		        		});
		        	}
	        	},
				failure: function(){
					Ext.Msg.alert('提示','保存失败。');
				}
	        });
		}else{
			Ext.Msg.alert('提示','未填写采购数量或单价或车辆用途');
		}
    },
    onCallCarDemandDetailSelected:function(grid, td, cellIndex, record, tr, rowIndex, e, eOpts){
    	var del = e.getTarget('.btn-danger');
    	var search = e.getTarget('.btn-default');
    	var callCarDemandDetailGrid = this.lookupReference('callCarDemandDetailGrid');
		var callCarDemandDetailStore = callCarDemandDetailGrid.getStore();
    	if(del){
    		if(record.data.demandId!=null){
    			Ext.Ajax.request({
    				url : 'callCar/deleteCallCarDemandDetail',
    				params : {
    					id : record.data.id
    				},
    	            method: 'POST',	
    				success : function(data) {
    					if(data.responseText=='success'){
    						callCarDemandDetailStore.reload();
    					}
    				}
    			});
    		}else{
    			callCarDemandDetailStore.remove(record);
    		}
    	}
    	if(search){
    		var callCarWin = Ext.create({
    			xtype : 'callCarListWin',
    			closeAction : 'destroy'
    		});
    		callCarWin.show();
    	}
    },
    carUsageEditor:function(value){
    	if(value){
    		var gridStore = this.getView().getViewModel().getStore('carUsageStore');
        	return gridStore.findRecord('code', value).data.nameCn;
    	}
    }
});
