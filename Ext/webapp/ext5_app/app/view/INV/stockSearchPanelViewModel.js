/*
 * File: app/view/role/RoleMangerPanelViewModel.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Evcorp.view.INV.stockSearchPanelViewModel', {
    extend: 'Ext.app.ViewModel',
    alias: 'viewmodel.stockSearchPanel',
    stores: {
    	carStockGridStore: {
            model: 'Evcorp.model.CarStock',
            pageSize: 20,
            autoLoad: true
        },
        carStockStore:{
        	fields: ['code','nameCn'],
        	autoLoad: true,
        	proxy: {
        		type: 'direct',
        		api: {
        			read: chooseOptionContro.getChooseOptionWithSelect
        		},
        		extraParams: {
        			type: 'carStock'
        		}
        	}
        },
        stockInTypeStore:{
        	fields: ['code','nameCn'],
        	autoLoad: true,
        	proxy: {
        		type: 'direct',
        		api: {
        			read: chooseOptionContro.getChooseOptionWithSelect
        		},
        		extraParams: {
        			type: 'stockInType'
        		}
        	}
        },
        stockOutTypeStore:{
        	fields: ['code','nameCn'],
        	autoLoad: true,
        	proxy: {
        		type: 'direct',
        		api: {
        			read: chooseOptionContro.getChooseOptionWithSelect
        		},
        		extraParams: {
        			type: 'stockOutType'
        		}
        	}
        },
        acceptanceResultStore:{
        	fields: ['code','nameCn'],
        	autoLoad: true,
        	proxy: {
        		type: 'direct',
        		api: {
        			read: chooseOptionContro.getChooseOptionWithSelect
        		},
        		extraParams: {
        			type: 'acceptanceResult'
        		}
        	}
        },
        inspectorStore:{
        	autoLoad: true,
        	fields : [ 'id', 'username' ],
			proxy : {
				type: 'direct',
				directFn : auUserContro.findUsersByRole,
        		extraParams: {
        			roleCode : 'warehouse operator'
        		}
			}
        },
        
        isEnterInAccountStore:{
        	fields: ['code','nameCn'],
        	autoLoad: true,
        	proxy: {
        		type: 'direct',
        		api: {
        			read: chooseOptionContro.getChooseOptionWithSelect
        		},
        		extraParams: {
        			type: 'isValid'
        		}
        	}
        },
        isBigCustomerStore:{
        	fields: ['code','nameCn'],
        	autoLoad: true,
        	proxy: {
        		type: 'direct',
        		api: {
        			read: chooseOptionContro.getChooseOptionWithSelect
        		},
        		extraParams: {
        			type: 'isValid'
        		}
        	}
        },
        isAgentAcceptanceStore:{
        	fields: ['code','nameCn'],
        	autoLoad: true,
        	proxy: {
        		type: 'direct',
        		api: {
        			read: chooseOptionContro.getChooseOptionWithSelect
        		},
        		extraParams: {
        			type: 'isValid'
        		}
        	}
        },
        isDirectSellingStore:{
        	fields: ['code','nameCn'],
        	autoLoad: true,
        	proxy: {
        		type: 'direct',
        		api: {
        			read: chooseOptionContro.getChooseOptionWithSelect
        		},
        		extraParams: {
        			type: 'isValid'
        		}
        	}
        },
        damageStatusStore:{
        	fields: ['code','nameCn'],
        	autoLoad: true,
        	proxy: {
        		type: 'direct',
        		api: {
        			read: chooseOptionContro.getChooseOptionWithSelect
        		},
        		extraParams: {
        			type: 'damageStatus'
        		}
        	}
        },
        carAgencyStore:{
        	fields: ['code','nameCn'],
        	autoLoad: true,
        	proxy: {
        		type: 'direct',
        		api: {
        			read: chooseOptionContro.getChooseOptionWithSelect
        		},
        		extraParams: {
        			type: 'carAgency'
        		}
        	}
        },
        carDriveLicenseNoStore: {
        	fields: ['code','nameCn'],
        	autoLoad: true,
        	proxy: {
        		type: 'direct',
        		api: {
        			read: chooseOptionContro.getChooseOptionWithSelect
        		},
        		extraParams: {
        			type: 'isValid'
        		}
        	}
        },
        isLockedStore: {
        	fields: ['code','nameCn'],
        	autoLoad: true,
        	proxy: {
        		type: 'direct',
        		api: {
        			read: chooseOptionContro.getChooseOptionWithSelect
        		},
        		extraParams: {
        			type: 'isValid'
        		}
        	}
        },
        stockStatusStore: {
        	fields: ['code','nameCn'],
        	autoLoad: true,
        	proxy: {
        		type: 'direct',
        		api: {
        			read: chooseOptionContro.getChooseOptionWithSelect
        		},
        		extraParams: {
        			type: 'stockStatus'
        		}
        	}
        },
        distributionStatusStore: {
        	fields: ['code','nameCn'],
        	autoLoad: true,
        	proxy: {
        		type: 'direct',
        		api: {
        			read: chooseOptionContro.getChooseOptionWithSelect
        		},
        		extraParams: {
        			type: 'distributionStatus'
        		}
        	}
        },
        carTypeStore:{
        	fields: ['code','nameCn'],
        	autoLoad: true,
        	proxy: {
        		type: 'direct',
        		api: {
        			read: chooseOptionContro.getChooseOptionWithSelect
        		},
        		extraParams: {
        			type: 'carType'
        		}
        	}
        },
        sourceOfFundStore:{
        	fields: ['code','nameCn'],
        	autoLoad: true,
        	proxy: {
        		type: 'direct',
        		api: {
        			read: chooseOptionContro.getChooseOptionWithSelect
        		},
        		extraParams: {
        			type: 'sourceOfFund'
        		}
        	}
        },
        
        isUserdCarStore:{
        	fields: ['code','nameCn'],
        	autoLoad: true,
        	proxy: {
        		type: 'direct',
        		api: {
        			read: chooseOptionContro.getChooseOptionWithSelect
        		},
        		extraParams: {
        			type: 'isValid'
        		}
        	}
        },
        isSalesPromotionStore:{
        	fields: ['code','nameCn'],
        	autoLoad: true,
        	proxy: {
        		type: 'direct',
        		api: {
        			read: chooseOptionContro.getChooseOptionWithSelect
        		},
        		extraParams: {
        			type: 'isValid'
        		}
        	}
        },
        isTestDriveStore:{
        	fields: ['code','nameCn'],
        	autoLoad: true,
        	proxy: {
        		type: 'direct',
        		api: {
        			read: chooseOptionContro.getChooseOptionWithSelect
        		},
        		extraParams: {
        			type: 'isValid'
        		}
        	}
        },
        isBackCarStore:{
        	fields: ['code','nameCn'],
        	autoLoad: true,
        	proxy: {
        		type: 'direct',
        		api: {
        			read: chooseOptionContro.getChooseOptionWithSelect
        		},
        		extraParams: {
        			type: 'isValid'
        		}
        	}
        },
        
        carBrandStore:{
        	fields: ['code','nameCn'],
        	autoLoad: true,
        	proxy: {
        		type: 'direct',
        		api: {
        			read: chooseOptionContro.getCarBrandChooseOptionWithAll
        		},
        		extraParams: {
        			type: 'type'
        		}
        	}
        },
        carSeriesStore:{
        	fields: ['code','nameCn'],
        	autoLoad: true,
        	proxy: {
        		type: 'direct',
        		api: {
        			read: chooseOptionContro.getCarSeriesChooseOptionWithAll
        		},
        		extraParams: {
        			type: 'type'
        		}
        	}
        },
        carModelStore:{
        	fields: ['code','type'],
        	autoLoad: true,
        	proxy: {
        		type: 'direct',
        		api: {
        			read: chooseOptionContro.getCarModelChooseOptionWithAll
        		},
        		extraParams: {
        			type: 'isValid'
        		}
        	}
        },
        
        createByStore : {
			autoLoad : true,
			fields : [ 'id', 'username' ],
			proxy : {
				type : 'direct',
				directFn : auUserContro.findAllUsers,
				extraParams : {
				}
			}
		},
    }
});