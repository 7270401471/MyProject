/*
 * File: app/view/role/RoleMangerPanelViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Evcorp.view.INV.receiptInTransitPanelViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.receiptInTransitPanel',
    onreceiptInTransitClick : function() {
    	var receiptInTransitwin = Ext.create({
    		xtype : 'checkinListWin',
    		width : '90%',
    		closeAction : 'destroy'
    	});
    	receiptInTransitwin.show();
    },

	receiptInTransitOperate:function(e, cell){
			var cellindex=cell.cellIndex;
			if(cellindex==9){
				var window = Ext.create({
					xtype : 'checkinListWin',
					width : 900,
					closeAction : 'destroy'
				});
				window.show();
			};

	},
	onProviderSearch : function() {
    	var receiptInTransitwin = Ext.create({
    		 xtype : 'providerListWin',
    		//xtype : 'orderlistattachmentwin',
    		width : 600,
    		closeAction : 'destroy'
    	});
    	receiptInTransitwin.show();
    },
	
	
	onCreateClaimRule : function() {

		var accModel = new Evcorp.model.receiptInTransitDemand({
					id : -1
				});
		var gridStore = this.getView().getViewModel().getStore('receiptInTransitDemandStore');
		gridStore.insert(0,accModel);
	},
	searchClick:function(){
		var receiptInTransitDemandSearchForm = this.lookupReference('receiptInTransitDemandSearchForm');
        var receiptInTransitDemandGrid = this.lookupReference('receiptInTransitDemandGrid');
        var extraParams = receiptInTransitDemandSearchForm.getForm().getValues();
        var receiptInTransitDemandStore = receiptInTransitDemandGrid.getStore(); 
        
        receiptInTransitDemandStore.on("beforeload", function (receiptInTransitDemandStore, operation, eOpts) {
					 Ext.apply(receiptInTransitDemandStore.proxy.extraParams, extraParams);
					});
       
        receiptInTransitDemandStore.loadPage(1,{"start":0,"limit":20});
        receiptInTransitDemandGrid.getSelectionModel().deselectAll();

	},
	onreceiptInTransitDemandSelected:function(grid, td, cellIndex, record, tr, rowIndex, e, eOpts){
    	var modify = e.getTarget('.btn-primary');
    	var del = e.getTarget('.btn-danger');
    	if(modify){
    		var win = Ext.create({
        		xtype : 'checkinListWin',
        		width : '90%',
        		closeAction : 'destroy'
        	});
    		win.down("form").loadRecord(record);
    		var store = win.getViewModel().getStore('receiptInTransitDemandDetailStore');
    		store.load({params:{demandId:record.data.id}});
        	win.show();
    	}
    	if(del){
    		var receiptInTransitDemandGrid = this.lookupReference('receiptInTransitDemandGrid');
    		var receiptInTransitDemandStore = receiptInTransitDemandGrid.getStore();
    		Ext.Ajax.request({
				url : 'receiptInTransit/deletereceiptInTransitDemand',
				params : {
					id : record.data.id
				},
	            method: 'POST',	
				success : function(data) {
					if(data.responseText=='success'){
						receiptInTransitDemandStore.loadPage(1 ,{"start":0,"limit":10});
					}
				}
			});
    	}
    },
    onExportClick:function(){
    	var receiptInTransitDemandGrid = this.lookupReference('receiptInTransitDemandGrid');
    	var sel = receiptInTransitDemandGrid.getSelectionModel().getSelection();
    	var ids = [];
    	Ext.each(sel,function(item){
    		ids.push(item.data.id);
		});
    	if(ids.length>0){
    		window.open('receiptInTransit/download/receiptInTransitDemandFile?ids='+ids);
    	}
    },
    onSubmitClick:function(){
    	var receiptInTransitDemandGrid = this.lookupReference('receiptInTransitDemandGrid');
    	var receiptInTransitDemandStore = receiptInTransitDemandGrid.getStore();
    	var sel = receiptInTransitDemandGrid.getSelectionModel().getSelection();
    	var ids = [];
    	Ext.each(sel,function(item){
			ids.push(item.data.id);
		});
    	if(ids.length>0){
    		Ext.Ajax.request({
				url : 'receiptInTransit/startreceiptInTransitProcess',
				params : {
					ids : ids
				},
	            method: 'POST',	
				success : function(data) {
					if(data.responseText=='success'){
						Ext.Msg.alert("提示",'提交成功,CALL车流程已启动',function(){
		        			receiptInTransitDemandStore.loadPage(1 ,{"start":0,"limit":10});
		        		});
					}
				}
			});
    	}
    },
    onProviderSearch : function() {
    	var providerWin = Ext.create({
    		xtype : 'providerListWin',
    		width : '60%',
    		height: '60%',
    		closeAction : 'destroy'
    	});
    	providerWin.show();
    }
});
