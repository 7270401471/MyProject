/*
 * File: app/view/role/RoleMangerPanelViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Evcorp.view.salesOrder.SalesOrderListPanelViewController', {
	extend : 'Ext.app.ViewController',
	alias : 'controller.salesOrderListPanel',
	control: {
        '#': {
        	afterrender:'show'
        }
    },
    show:function(){
    	var panel=this.getView();
    },
	onSalesOrderQueryClick : function() {
		var queryForm = this.lookupReference('salesOrderQueryForm');
		var listGrid = this.lookupReference('salesOrderGrid');
		var extraParams = queryForm.getForm().getValues();
		var dataStore = listGrid.getStore();
		dataStore.on("beforeload", function(dataStore, operation, eOpts) {
			Ext.apply(dataStore.proxy.extraParams, extraParams);
		});
		dataStore.loadPage(1, {
			"start" : 0,
			"limit" : 20
		});
		listGrid.getSelectionModel().deselectAll();
	},
	onSalesOrderAddClick : function() {
		var salesOrder = Ext.create('Evcorp.model.SalesOrder');
		var viewModel = Ext.create(
				'Evcorp.view.salesOrder.SalesOrderWinViewModel', {
					data : {
						'salesOrder' : salesOrder,
						'directivePrice':salesOrder.data.directivePrice,  //销售指导价
						'discountPrice':salesOrder.data.discountPrice,     //折让金额
						'upholsterAmount':salesOrder.data.upholsterAmount,//装潢费
						'carInsAmount':salesOrder.data.carInsAmount,//预估保险费
						'actualInsAmount':salesOrder.data.actualInsAmount,//实际保险费
						'servicePresentAmount':salesOrder.data.servicePresentAmount,//服务代办费
						'chargerFee':salesOrder.data.chargerFee,//电桩服务费
						'recvAmoount':salesOrder.data.recvAmoount//实收总金额
					},
					formulas: {
						actualPriceValue: function (get) {
				            var directivePrice = get('directivePrice');
				            var discountPrice = get('discountPrice');
				            return directivePrice-discountPrice;
				        },
				        arAmountValue:function(get){
				        	var actualPrice=get('actualPriceValue');//实际销售价
				            var upholsterAmount=get('upholsterAmount');//装潢费
				            var carInsAmount=get('carInsAmount');//预估保险费
				            var actualInsAmount=get('actualInsAmount');//实际保险费
				            var servicePresentAmount=get('servicePresentAmount');//服务代办费
				            var chargerFee=get('chargerFee');//电桩服务费
				            if(actualInsAmount==null || actualInsAmount==""){
				            	//实际保险费等于空取预估保险费
				            	return actualPrice+upholsterAmount+carInsAmount+servicePresentAmount+chargerFee;
				            }else{
				            	return actualPrice+upholsterAmount+actualInsAmount+servicePresentAmount+chargerFee;
				            }
				        },
				        orderAmountValue:function(get){
				        	var actualPrice=get('actualPriceValue');//实际销售价
				            var upholsterAmount=get('upholsterAmount');//装潢费
				            var carInsAmount=get('carInsAmount');//预估保险费
				            var servicePresentAmount=get('servicePresentAmount');//服务代办费
				            var chargerFee=get('chargerFee');//电桩服务费
				            return actualPrice+upholsterAmount+carInsAmount+servicePresentAmount+chargerFee;
				        },
				        orderArrearsValue:function(get){
				        	return get('arAmountValue')-get('recvAmoount');
				        }
				        
				    }
				});
		var salesOrderWin = Ext.create({
			xtype : 'salesOrderWin',
			width : 1000,
			height : '100%',
			closeAction : 'destroy',
			viewModel : viewModel
		});
		salesOrderWin.down('#saleOrderPcItem').disabled=true;
		var startWorkflowButton = salesOrderWin.lookupReference('startWorkflowButton');
		startWorkflowButton.setHidden(false);
		salesOrderWin.down('#createOrUpdateItem').setValue(1);
		salesOrderWin.show();
	},
	onSalesOrderUpdClick : function() {
		var salesOrderGrid = this.lookupReference('salesOrderGrid');

		var selectModel = salesOrderGrid.getSelectionModel().getSelection();
		var salesOrder = Ext.create('Evcorp.model.SalesOrder');
		if (selectModel.length == 0) {
			Ext.Msg.alert("提示", '请选择一条记录');
		}else{
			Ext.apply(salesOrder, selectModel[0]);
			var viewModel = Ext
					.create('Evcorp.view.salesOrder.SalesOrderWinViewModel',
							{
								data : {
									'salesOrder' : salesOrder,
									'directivePrice':salesOrder.data.directivePrice,  //销售指导价
									'discountPrice':salesOrder.data.discountPrice,     //折让金额
									'upholsterAmount':salesOrder.data.upholsterAmount,//装潢费
									'carInsAmount':salesOrder.data.carInsAmount,//预估保险费
									'actualInsAmount':salesOrder.data.actualInsAmount,//实际保险费
									'servicePresentAmount':salesOrder.data.servicePresentAmount,//服务代办费
									'chargerFee':salesOrder.data.chargerFee,//电桩服务费
									'recvAmoount':salesOrder.data.recvAmoount//实收总金额
								},
								formulas: {
									actualPriceValue: function (get) {
							            var directivePrice = get('directivePrice')
							            var discountPrice = get('discountPrice')
							            return directivePrice-discountPrice;
							        },
							        arAmountValue:function(get){
							        	var actualPrice=get('actualPriceValue');//实际销售价
							            var upholsterAmount=get('upholsterAmount');//装潢费
							            var carInsAmount=get('carInsAmount');//预估保险费
							            var actualInsAmount=get('actualInsAmount');//实际保险费
							            var servicePresentAmount=get('servicePresentAmount');//服务代办费
							            var chargerFee=get('chargerFee');//电桩服务费
							            if(actualInsAmount==null || actualInsAmount==""){
							            	//实际保险费等于空取预估保险费
							            	return actualPrice+upholsterAmount+carInsAmount+servicePresentAmount+chargerFee;
							            }else{
							            	return actualPrice+upholsterAmount+actualInsAmount+servicePresentAmount+chargerFee;
							            }
							        },
							        orderArrearsValue:function(get){
							        	return get('arAmountValue')-get('recvAmoount');
							        },
							        orderAmountValue:function(get){
							        	var actualPrice=get('actualPriceValue');//实际销售价
							            var upholsterAmount=get('upholsterAmount');//装潢费
							            var carInsAmount=get('carInsAmount');//预估保险费
							            var servicePresentAmount=get('servicePresentAmount');//服务代办费
							            var chargerFee=get('chargerFee');//电桩服务费
							            return actualPrice+upholsterAmount+carInsAmount+servicePresentAmount+chargerFee;
							        }
							        
							    }
							});
			var salesOrderWin = Ext.create({
				xtype : 'salesOrderWin',
				width : 1000,
				height : '95%',
				closeAction : 'destroy',
				viewModel : viewModel
			});
			if(parseInt(selectModel[0].data.status)>6){
				//订单状态大于出库，配车按钮不可用
				salesOrderWin.down('#saleOrderPcItem').disabled=true;
				if(parseInt(selectModel[0].data.status)>10){
					salesOrderWin.down('#toolbarItem').disabled=true;
					var buttons=Ext.ComponentQuery.query('button');
					salesOrderWin.lookupReference('queryCustomerButton').disabled=true;
					salesOrderWin.lookupReference('queryCarButton').disabled=true;
				}
			}else{
				var startWorkflowButton = salesOrderWin.lookupReference('startWorkflowButton');
				salesOrderWin.lookupReference('contactButton').show();
				salesOrderWin.lookupReference('mortgageButton').show();
				salesOrderWin.lookupReference('insuranceButton').show();
				salesOrderWin.lookupReference('chargeButton').show();
				salesOrderWin.lookupReference('collectButton').show();
				salesOrderWin.lookupReference('paymentButton').show();
				salesOrderWin.lookupReference('licenseButton').show();
				salesOrderWin.lookupReference('sixPieceButton').show();
				salesOrderWin.lookupReference('backButton').show();
				startWorkflowButton.setHidden(false);
			};
			salesOrderWin.down('#createOrUpdateItem').setValue(1);
			salesOrderWin.show();
		}
	},
	onSalesOrderViewClick:function(){
		var salesOrderGrid = this.lookupReference('salesOrderGrid');
		var selectModel = salesOrderGrid.getSelectionModel().getSelection();
		var salesOrder = Ext.create('Evcorp.model.SalesOrder');
		if (selectModel.length == 0) {
			Ext.Msg.alert("提示", '请选择一条记录');
		}else{
			Ext.apply(salesOrder, selectModel[0]);
			var viewModel = Ext
					.create('Evcorp.view.salesOrder.SalesOrderWinViewModel',
							{
								data : {
									'salesOrder' : salesOrder
								}
							});
			var salesOrderWin = Ext.create({
				xtype : 'salesOrderWin',
				width : 1000,
				height : '95%',
				closeAction : 'destroy',
				viewModel : viewModel
			});
			salesOrderWin.lookupReference('saveOrderButton').setHidden(true);
//			salesOrderWin.lookupReference('queryCustomerButton').setHidden(true);
//			salesOrderWin.lookupReference('queryCarButton').setHidden(true);
//			salesOrderWin.lookupReference('assignCarButton').setHidden(true);
			salesOrderWin.lookupReference('contactButton').show();
			salesOrderWin.lookupReference('mortgageButton').show();
			salesOrderWin.lookupReference('insuranceButton').show();
			salesOrderWin.lookupReference('chargeButton').show();
			salesOrderWin.lookupReference('collectButton').show();
			salesOrderWin.lookupReference('paymentButton').show();
			salesOrderWin.lookupReference('licenseButton').show();
			salesOrderWin.lookupReference('sixPieceButton').show();
//			salesOrderWin.lookupReference('backButton').show();
			
			salesOrderWin.lookupReference('queryCustomerButton').disabled=true;
			salesOrderWin.lookupReference('queryCarButton').disabled=true;
			salesOrderWin.lookupReference('assignCarButton').disabled=true;
			var salesOrderForm = salesOrderWin.lookupReference('salesOrderForm');
			setFormReadOnly(salesOrderForm,true);//表单控件readonly置为true
			salesOrderWin.down('#createOrUpdateItem').setValue(0);
			salesOrderWin.show();
		}
	}
});
