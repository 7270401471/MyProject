/*
 * File: app/view/menu/menuPanelViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Evcorp.view.salesOrder.SalesOrderWinViewController', {
	extend : 'Ext.app.ViewController',
	alias : 'controller.salesOrderWin',
	control: {
        '#': {
        	close: 'onPanelClose'
        }
    },
    /**
     * 关闭后清空 查询条件里面的参数
     * **/
    onPanelClose: function (panel){
//		var conCarMgtStore = Ext.ComponentQuery.query('#conCarMgtGrid')[0]
//		.getStore();
//		conCarMgtStore.reload();
    },
    queryCarList : function() {
		var contractCarListWindow = Ext.create({
			xtype : 'carProductsWin',
			closeAction : 'destroy'
		});
		// contractCarListWindow.down('#selectContractCarId').removeListener(
		// 'click', 'onChoiceClick');
		contractCarListWindow.down('#selectContractCarId').on({
			click : 'onSalesOrderSelectCar'
		})
		contractCarListWindow.show();
	},
	queryCustomerList:function(){
		var customerWindow = Ext.create({
			xtype : 'customerWin',
			closeAction : 'destroy'
		});
		// contractCarListWindow.down('#selectContractCarId').removeListener(
		// 'click', 'onChoiceClick');
		customerWindow.down('#selectCustomer').on({
			click : 'onSalesOrderSelectCustomer'
		})
		customerWindow.show();
	},
	onSalesOrderSave:function(){
		var form = this.lookupReference('salesOrderForm');
		var codeText=this.lookupReference('salesOrderNoRef');
		var salesOrderStore = Ext.ComponentQuery.query('#salesOrderGridId')[0]
				.getStore();
		var win = this.getView();
		var isValid = form.getForm().isValid();
		if (isValid) {
			form.getForm().submit({
				success : function(form, action) {
					Ext.Msg.alert("提示", "保存成功");
					codeText.setValue(action.result.salesNo);
					salesOrderStore.reload();
				},
				failure : function(form, action) {
					Ext.Msg.alert("提示", "系统错误，保存失败");
					win.close();
				}
			})
		} else {
			Ext.Msg.alert("提示", '请把信息填完整');
		}
	},
	onCollectCreditClick:function(){
		var form = this.lookupReference('salesOrderForm');
    	var businessKey = form.getForm().getValues().code;
    	var collectWin = Ext.create({
			xtype:'collectCreditWin',
			width : 800,
			height : '80%',
			businessKey : businessKey,
			closeAction : 'destroy'
		});
		var createOrUpdate = form.getForm().getValues().createOrUpdate;
		var uploadAttachmentPanel=collectWin.down('#collectCreditWinAttachmentPanel');
    	if(createOrUpdate==0){
    		uploadAttachmentPanel.disabled=true;
    	}
    	collectWin.show();
    },
    onStartWorkflowClick:function(){
    	var form = this.lookupReference('salesOrderForm');
    	var salesOrderCode = form.getForm().getValues().code;
    	if(salesOrderCode!=null&&salesOrderCode!=''){
    		var win = this.getView();
    		win.mask("请稍等，正在处理中...","x-mask-loading");
    		Ext.Ajax.request({
    			url : 'salesOrder/startSalesOrderWorkflow',
    			params : {
    				salesOrderCode:salesOrderCode
    			},
    			success : function(data) {
    				win.unmask();
    				if(data.responseText=='success'){
    					Ext.Msg.alert("提示",'流程启动成功');
    				}else if(data.responseText=='exists'){
    					Ext.Msg.alert("提示",'该订单流程已启动,请勿重复启动');
    				}
    			}
          });
    	}else{
    		Ext.Msg.alert("提示",'请先保存订单信息');
    	}
    },
    onSubmitClick:function(){
    	var win = this.getView();
    	var taskId = win.taskId;
    	var processInstanceId = win.processInstanceId;
    	var businessKey = win.businessKey;
    	win.mask("请稍等，正在处理中...","x-mask-loading");
    	Ext.Ajax.request({
			url : 'salesOrder/submitTask',
			params : {
				taskId : taskId,
				processInstanceId : processInstanceId,
				businessKey : businessKey
			},
            method: 'POST',	
			success : function(data) {
				win.unmask();
				if(data.responseText=='success'){
					Ext.Msg.alert("提示",'提交成功',function(){
		    			var myActiveTaskGrid = Ext.ComponentQuery.query('#myActiveTaskGrid')[0];
		    			var myActiveTaskStore = myActiveTaskGrid.getStore();
		    			myActiveTaskStore.loadPage(1 ,{"start":0,"limit":20});
		    			var eastPanel = Ext.ComponentQuery.query("#eastPanelId")[0];
		    	        eastPanel.removeAll();
		    			win.close();
		    		});
				}
			}
		});
    },
    onAgreeClick:function(){
    	var win = this.getView();
    	var taskId = win.taskId;
    	var processInstanceId = win.processInstanceId;
    	var businessKey = win.businessKey;
    	var comment = win.lookupReference('commentForm').getForm().getValues().comment;
    	win.mask("请稍等，正在处理中...","x-mask-loading");
    	Ext.Ajax.request({
			url : 'salesOrder/approveAgree',
			params : {
				taskId : taskId,
				processInstanceId : processInstanceId,
				businessKey : businessKey,
				comment : comment
			},
            method: 'POST',	
			success : function(data) {
				win.unmask();
				Ext.Msg.alert("提示",'审批通过成功',function(){
	    			var myActiveTaskGrid = Ext.ComponentQuery.query('#myActiveTaskGrid')[0];
	    			var myActiveTaskStore = myActiveTaskGrid.getStore();
	    			myActiveTaskStore.loadPage(1 ,{"start":0,"limit":20});
	    			var eastPanel = Ext.ComponentQuery.query("#eastPanelId")[0];
	    	        eastPanel.removeAll();
	    			win.close();
	    		});
			}
		});
    },
    onRejectClick:function(){
    	var win = this.getView();
    	var taskId = win.taskId;
    	var processInstanceId = win.processInstanceId;
    	var businessKey = win.businessKey;
    	var comment = win.lookupReference('commentForm').getForm().getValues().comment;
    	if(comment==null||comment==''){
    		Ext.Msg.alert("提示",'请填写备注')
    	}else{
    		win.mask("请稍等，正在处理中...","x-mask-loading");
    		Ext.Ajax.request({
    			url : 'salesOrder/approveReject',
    			params : {
    				taskId : taskId,
    				processInstanceId : processInstanceId,
    				businessKey : businessKey,
    				comment : comment
    			},
                method: 'POST',	
    			success : function(data) {
    				win.unmask();
    				Ext.Msg.alert("提示",'审批驳回成功',function(){
    	    			var myActiveTaskGrid = Ext.ComponentQuery.query('#myActiveTaskGrid')[0];
    	    			var myActiveTaskStore = myActiveTaskGrid.getStore();
    	    			myActiveTaskStore.loadPage(1 ,{"start":0,"limit":20});
    	    			var eastPanel = Ext.ComponentQuery.query("#eastPanelId")[0];
		    	        eastPanel.removeAll();
    	    			win.close();
    	    		});
    			}
    		});
    	}
    },
    onDeleteClick:function(){
    	var win = this.getView();
    	var taskId = win.taskId;
    	var processInstanceId = win.processInstanceId;
    	var businessKey = win.businessKey;
    	var comment = win.lookupReference('commentForm').getForm().getValues().comment;
    	if(comment==null||comment==''){
    		Ext.Msg.alert("提示",'请填写备注')
    	}else{
    		win.mask("请稍等，正在处理中...","x-mask-loading");
    		Ext.Ajax.request({
    			url : 'salesOrder/deleteProcess',
    			params : {
    				taskId : taskId,
    				processInstanceId : processInstanceId,
    				businessKey : businessKey,
    				comment : comment
    			},
                method: 'POST',	
    			success : function(data) {
    				win.unmask();
    				Ext.Msg.alert("提示",'退单成功',function(){
    	    			var myActiveTaskGrid = Ext.ComponentQuery.query('#myActiveTaskGrid')[0];
    	    			var myActiveTaskStore = myActiveTaskGrid.getStore();
    	    			myActiveTaskStore.loadPage(1 ,{"start":0,"limit":20});
    	    			var eastPanel = Ext.ComponentQuery.query("#eastPanelId")[0];
		    	        eastPanel.removeAll();
    	    			win.close();
    	    		});
    			}
    		});
    	}
    },
    onPaymentRecordClick:function(){
    	var form = this.lookupReference('salesOrderForm');
    	var salesOrderCode = form.getForm().getValues().code;
    	var arAmount = form.getForm().getValues().arAmount;
    	var win = this.getView();
    	var store = win.getViewModel().getStore('detail');
    	var paymentWin = Ext.create({
			xtype:'paymentRecordWin',
			width : 800,
			height : '60%',
			salesOrderCode:salesOrderCode,
			closeAction : 'destroy',
			arAmount:arAmount
		});
    	paymentWin.addListener('close',function(){
    		if(store!=null){
    			store.load({params:{businessKey:salesOrderCode},
        			callback: function(records, operation, success) {
    					if(success){
    						win.down('form').loadRecord(records[0]);
    			    		win.down('#orderArrearsItem').setValue(records[0].data.arAmount-records[0].data.recvAmoount);
    					}
    			    }
        		});
    		}
    		var grid = Ext.ComponentQuery.query('#salesOrderGridId')[0];
    		grid.getStore().reload();
    		var selectModel = grid.getSelectionModel().getSelection();
    		win.down('form').loadRecord(selectModel[0]);
    	})
//    	paymentWin.down('#salesOrderPaymentGridId').disabled=true;
    	var createOrUpdate = form.getForm().getValues().createOrUpdate;
    	if(createOrUpdate==0){
    		paymentWin.down('#salesOrderPaymentGridId').disabled=true;
    	} 
    	paymentWin.show();
	},
	chargerMethodChange:function(obj,newValue){
		var chargerFeeText = this.lookupReference('chargerFeeRef');
		if(newValue==1){
			//挂靠
			chargerFeeText.setValue(3000);
			chargerFeeText.fireEvent('change',chargerFeeText,3000,0);
		}else{
			chargerFeeText.setValue(0);
			chargerFeeText.fireEvent('change',chargerFeeText,0,3000);
		};
		
	},
	onPcClick:function(){
		var productCodeText=this.lookupReference('salesOrderProductCodeRef');
		var productNameText=this.lookupReference('salesOrderProductNameRef');
		var saleOrderNoText=this.lookupReference('salesOrderNoRef');
    	var carStockWin = Ext.create({
			xtype:'carStockWin',
			width : 800,
			height : '60%',
			closeAction : 'destroy'
		});

    	carStockWin.getViewModel().getStore(
				'carStockStore').getProxy().extraParams = {
			productCode : productCodeText.getValue()
		};
    	carStockWin.down('#carStockWinProductItem').setValue(productNameText.getValue());
    	carStockWin.down('#carStockWinSaleOrderNo').setValue(saleOrderNoText.getValue());
    	carStockWin.down('#carStockWinProductItem').setValue(productCodeText.getValue());
    	carStockWin.down('#selectContractCarId').on({
			click : 'onSalesOrderPcClick'
		})
    	carStockWin.show();
	},
	onConttactSign:function(){
		var form = this.lookupReference('salesOrderForm');
    	var businessKey = form.getForm().getValues().code;
    	var contractWin = Ext.create({
			xtype:'contractWin',
			width : 800,
			height : '60%',
			businessKey:businessKey,
			closeAction : 'destroy'
		});
		var uploadAttachmentPanel = contractWin
		.down('#contractAttachmentPanelId');// 合同附件
		uploadAttachmentPanel.setTitle('');
		contractWin.down('#saleOrderNoItem').setValue(businessKey);
		contractWin.down('#contractNoItem').setValue(form.getForm().getValues().contractNo);
		contractWin.down('#contractSignedDateItem').setValue(form.getForm().getValues().contractSignedDate);
    	var createOrUpdate = form.getForm().getValues().createOrUpdate;
    	if(createOrUpdate==0){
        	uploadAttachmentPanel.disabled=true;
        	contractWin.down('#contractSignedDateItem').disabled=true;
        	contractWin.down('#contractSaveButton').disabled=true;
        	contractWin.down('#contractPdfDown').disabled=true;
    	} 
    	contractWin.show();
	},
	onMortgageClick:function(){
		var form = this.lookupReference('salesOrderForm');
    	var salesOrderNo = form.getForm().getValues().code;
    	var mortgageWin = Ext.create({
			xtype:'mortgageWin',
			width : 550,
			height : '40%',
			closeAction : 'destroy',
			listeners:{
    			beforeshow:function(){
    				var store = mortgageWin.getViewModel().getStore('mortgageStore');
    				if(store!=null){
    					store.load({
        					params:{'saleOrderNo':salesOrderNo},
        					callback: function(records, operation, success) {
        						if(success){
        							mortgageWin.down('form').loadRecord(records[0]);
        						}
        				    }
        				});
    				}
    			}
    		}
		});
//    	mortgageWin.down('#saleOrderNoItem').setValue(salesOrderNo);
    	var createOrUpdate = form.getForm().getValues().createOrUpdate;
    	if(createOrUpdate==0){
        	var form=mortgageWin.down('#mortgageWinItem');
        	mortgageWin.down('#mortgageSaveButton').disabled=true;
        	mortgageWin.down('#mortgageCancelButton').disabled=true;
        	setFormReadOnly(form,true);//表单控件readonly置为true
    	} 
    	mortgageWin.show();
	},
	onInsuranceClick:function(){
		var form = this.lookupReference('salesOrderForm');
    	var salesOrderNo = form.getForm().getValues().code;
    	var insuranceTerms=form.getForm().getValues().insuranceTerms;
    	var insuranceWin = Ext.create({
			xtype:'insuranceWin',
			width : 700,
			height : '50%',
			closeAction : 'destroy',
			listeners:{
    			beforeshow:function(){
    				var store = insuranceWin.getViewModel().getStore('insuranceStore');
    				if(store!=null){
    					store.load({
        					params:{'saleOrderNo':salesOrderNo},
        					callback: function(records, operation, success) {
        						if(success){
        							insuranceWin.down('form').loadRecord(records[0]);
        							if(records[0].data.insuranceTerms==null){
        								insuranceWin.down('#insuranceTermsItem').setValue(insuranceTerms);
        							};
        						}
        				    }
        				});
    				}
    			}
    		}
		});
    	var createOrUpdate = form.getForm().getValues().createOrUpdate;
    	if(createOrUpdate==0){
        	var form=insuranceWin.down('#insuranceWinItem');
        	insuranceWin.down('#insuraceSaveButton').disabled=true;
        	insuranceWin.down('#insuraceCancelButton').disabled=true;
        	setFormReadOnly(form,true);//表单控件readonly置为true
    	} 
    	insuranceWin.show();
	},
	onChargeClick:function(){
		var form = this.lookupReference('salesOrderForm');
    	var businessKey = form.getForm().getValues().code;
    	var chargeWin = Ext.create({
			xtype:'chargeWin',
			width : 800,
			height : '60%',
			businessKey:businessKey,
			closeAction : 'destroy'
		});
		var uploadAttachmentPanel = chargeWin
		.down('#chargeAttachmentPanelId');// 合同附件
		uploadAttachmentPanel.setTitle('');
		var createOrUpdate = form.getForm().getValues().createOrUpdate;
    	if(createOrUpdate==0){
    		uploadAttachmentPanel.disabled=true;
    	}
		chargeWin.show();
	},
	onLicensePlateClick:function(){
		var form = this.lookupReference('salesOrderForm');
    	var businessKey = form.getForm().getValues().code;
    	var licensePlateWin = Ext.create({
			xtype:'licensePlateWin',
			width : 800,
			height : '60%',
			businessKey:businessKey,
			closeAction : 'destroy'
		});
		var uploadAttachmentPanel = licensePlateWin
		.down('#licenseAttachmentPanelId');// 合同附件
		uploadAttachmentPanel.setTitle('');
		licensePlateWin.down('#saleOrderNoItem').setValue(businessKey);
		licensePlateWin.down('#drivingLicenceItem').setValue(form.getForm().getValues().drivingLicence);
		licensePlateWin.down('#plateNumberItem').setValue(form.getForm().getValues().plateNumber);
		
    	var createOrUpdate = form.getForm().getValues().createOrUpdate;
    	if(createOrUpdate==0){
        	var form=licensePlateWin.down('#licensePlateItem');
        	licensePlateWin.down('#licensePlateSaveButton').disabled=true;
        	licensePlateWin.down('#licenseAttachmentPanelId').disabled=true;
        	setFormReadOnly(form,true);//表单控件readonly置为true
    	} 
		licensePlateWin.show();
	},
	onSixPieceSuitClick:function(){
		var form = this.lookupReference('salesOrderForm');
    	var sixPieceSuitWin = Ext.create({
			xtype:'sixPieceSuitWin',
			width : 600,
			height : '50%',
			closeAction : 'destroy'
		});
    	sixPieceSuitWin.down('#saleOrderNoItem').setValue(form.getForm().getValues().code);
    	sixPieceSuitWin.down('#oemInfoSvnPathItem').setValue(form.getForm().getValues().oemInfoSvnPath)
    	var createOrUpdate = form.getForm().getValues().createOrUpdate;
    	if(createOrUpdate==0){
    		sixPieceSuitWin.down('#sixPieceSuitSaveButton').disabled=true;
    	} 
		sixPieceSuitWin.show();
	},
	onBackOrderClick:function(){
		var form = this.lookupReference('salesOrderForm');
		Ext.MessageBox.show({  
            title:'退单',  
            msg:'退单原因:',  
            width:300,  
            buttons:Ext.MessageBox.OKCANCEL,  
            multiline:true,  
            fn:function(btn,text){
            	if(btn=='ok'){
	            		Ext.Ajax.request({
	        			url : 'salesOrder/backSaleOrder',
	        			params : {
	        				'saleOrderNo':form.getForm().getValues().code,
	        				'backReason':text
	        			},
	                    method: 'GET',	
	        			success : function(data) {
	        				if(data.responseText=='success'){
	        					Ext.Msg.alert("提示", '退单成功！');
	        				}
	        			}
	        		});
            	} else{
            		
            	}
            }  
        });  

	},
	onPriceChange:function(text,newValue,oldValue){
		if(text.getValue()==null){
			return;
		}else{
			var directivePriceText = Ext.ComponentQuery.query('#salesOrderDirectivePriceItem')[0];//销售指导价
			var actualPriceText = Ext.ComponentQuery.query('#salesOrderActualPriceItem')[0];//实际销售价
			var discountPriceText = Ext.ComponentQuery.query('#saleOrderDiscountPriceItem')[0];//折让金额
			  var orderAmountText = Ext.ComponentQuery.query('#saleOrderAmountItem')[0];//订单总金额
			  var arAmountText = Ext.ComponentQuery.query('#arAmountItem')[0];//应收总金额
			  var prepayAmountText = Ext.ComponentQuery.query('#saleOrderPrepayAmountItem')[0];//订金
			  var upholsterAmountText = Ext.ComponentQuery.query('#saleOrderUpholsterAmountItem')[0];//装潢费
			  var carInsAmountText = Ext.ComponentQuery.query('#saleOrderCarInsAmountItem')[0];//预估保险费
			  var actualInsAmountText = Ext.ComponentQuery.query('#saleOrderActualInsAmountItem')[0];//实际保险费
			  var servicePresentAmountText = Ext.ComponentQuery.query('#saleOrderServicePresentAmountItem')[0];//服务代办费
			  var chargerFeeText = Ext.ComponentQuery.query('#saleOrderChargerFeeItem')[0];//电桩服务费
			if(directivePriceText.getValue()!=null){
				if(discountPriceText.getValue()!=null){
					actualPriceText.setValue(directivePriceText.getValue()-discountPriceText.getValue());
				}
				  //订单总金额=实际销售价+装潢费+预估保险价+服务代办费+电桩服务费
				  var amount=0;
				  //应收总金额=实际销售价+装潢费+(实际保险费为空就取预估保险费)+服务代办费+电桩服务费-订金
				  var arAmount=0;
				  if(actualPriceText.getValue()!=null){
					  amount=actualPriceText.getValue();
					  arAmount=actualPriceText.getValue();
				  }
				  if(upholsterAmountText.getValue()!=null && upholsterAmountText.getValue()!=""){
					  amount=amount+upholsterAmountText.getValue();
					  arAmount=arAmount+upholsterAmountText.getValue();
				  }
				  
				  if(carInsAmountText.getValue()!=null && carInsAmountText.getValue()!=""){
					  amount=amount+carInsAmountText.getValue();
					  if(actualInsAmountText.getValue()!=null && actualInsAmountText.getValue()!=""){
						  arAmount=arAmount+actualInsAmountText.getValue();
					  }else{
						  arAmount=arAmount+carInsAmountText.getValue();
					  }
				  }else{
					  if(actualInsAmountText.getValue()!=null && actualInsAmountText.getValue()!=""){
						  arAmount=arAmount+actualInsAmountText.getValue();
					  }
				  }
				  if(servicePresentAmountText.getValue()!=null && servicePresentAmountText.getValue()!=""){
					  amount=amount+servicePresentAmountText.getValue();
					  arAmount=arAmount+servicePresentAmountText.getValue();
				  }
				  if(chargerFeeText.getValue()!=null && chargerFeeText.getValue()!=""){
					  amount=amount+chargerFeeText.getValue();
					  arAmount=arAmount+chargerFeeText.getValue();
				  }
//				  if(prepayAmountText.getValue()!=null && prepayAmountText.getValue()!=""){
//					  arAmount=arAmount-prepayAmountText.getValue();
//				  }
				  orderAmountText.setValue(amount);
				  arAmountText.setValue(arAmount);
			}
		};
	},
	onUpholsterAmountChange:function(){
		
	}
});
