/*
 * File: app/view/main/MainViewViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Evcorp.view.main.MainViewViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.mainview',
    
    menuAssemble: function(jsonParam, component, menuPanel) {
    	
    	//component.down('#contentPanel').add(Ext.create('Evcorp.view.consignment.ExportManagePanel'));
    	//component.down('#contentPanel').setActiveTab(Ext.create('Evcorp.view.consignment.ExportManagePanel'));
    	//调试方便
    	//出口问题件录入
    	/*component.down('#contentPanel').add(Ext.create('MyApp.view.consignment.ExportAddPanel'));
    	component.down('#contentPanel').setActiveTab(Ext.create('MyApp.view.consignment.ExportAddPanel'));*/
    	
    	//进口问题件处理
    	/*component.down('#contentPanel').add(Ext.create('MyApp.view.consignment.ImportHandlerPanel'));
    	component.down('#contentPanel').setActiveTab(Ext.create('MyApp.view.consignment.ImportHandlerPanel'));*/
    	
    	//进口问题件查看
 /*   	component.down('#contentPanel').add(Ext.create('MyApp.view.consignment.ImportCheckPanel'));
    	component.down('#contentPanel').setActiveTab(Ext.create('MyApp.view.consignment.ImportCheckPanel'));*/
    	
    	//出口问题件处理
    	/*component.down('#contentPanel').add(Ext.create('MyApp.view.consignment.ExportHandlerPanel'));
    	component.down('#contentPanel').setActiveTab(Ext.create('MyApp.view.consignment.ExportHandlerPanel'));*/
    	
    	/*	//出口问题件查看
    	component.down('#contentPanel').add(Ext.create('MyApp.view.consignment.ImportHandlerPanel'));
    	component.down('#contentPanel').setActiveTab(Ext.create('MyApp.view.consignment.ImportHandlerPanel'));*/
    	
        Ext.each(jsonParam,function(obj,index){
            var subPanel = Ext.create('Ext.Panel',{
                title:obj.text,
                icon:obj.icon,
                items:[{
                    xtype:'menu',
                    floating: false
                }]
            });
          
            //遍历第一层children,创建menuItem
            if(obj.children){
                Ext.each(obj.children,function(obj1,index1){
                    var menuItem = Ext.create('Ext.menu.Item',{
                        text:obj1.text,
                        icon:obj1.icon,
                        margin:'0 25'
                    });
                    menuItem.on('click',function(){
		                  if(obj1.children.length!=0){
		                         var workSpace = Ext.create('Ext.tab.Panel',{
				                        param:obj1.children,
				                        width:600,
				                        height:400,
				                        defaults :{
				                            bodyPadding: 10
				                        },
				                        items:[
				                            {
				                                title:'子功能列表',
				                                itemId:'list'
				                            }
				                        ]
		                        });
		                    this.up('panel').up('viewport').getController().workSpaceAssemble(workSpace.param,workSpace,component);
		                }else{
		                	var path = obj1.path;
		                	var text = obj1.text;
		                	this.up('panel').up('viewport').getController().newWorkSpace(component,path,text);
		                }
                    });
                    subPanel.down('menu').add(menuItem);
                });
            }
            menuPanel.add(subPanel);
        });
        component.down('#menuPanel').add(menuPanel);
    },
    
    //添加行的功能窗口
    newWorkSpace:function(component,path,text){
        var className = 'Evcorp.view.'+path;
        var contentPanel = component.down('#contentPanel');
        var flag;
        var functionTab = Ext.create(className,{
        	title:text
        });
        Ext.each(contentPanel.items.items,function(obj3,index3){
            if(obj3.itemId == functionTab.itemId){
            	contentPanel.setActiveTab(obj3);
                flag = 1;
            }
        });
        if(flag!=1){
        	contentPanel.add(functionTab);
        	contentPanel.setActiveTab(functionTab);
        }
/*        
        var tabOld = contentPanel.getComponent('tab_001');
        
        if(tabOld){
            contentPanel.setActiveTab(tabOld);
        }else{
            var tabNew = Ext.create(className,{
                itemId: 'tab_001'
            });
            contentPanel.add(tabNew);
            contentPanel.setActiveTab(tabNew);
        }*/
    },

    workSpaceAssemble: function(workSpaceParam, workSpace, component) {
            var viewCard = Ext.create('Ext.view.View',{
                store:'UsersStore',
                tpl:new Ext.XTemplate(
                    '<tpl for=".">',
                    '<div style="margin: 10px 10px;float:left;width:140px;height:80px;background:#6CA6CD" class="thumb-wrap" >',
                          '<span>{text}</span>',
                        '</div>',
                    '</tpl>'
                ),
                itemSelector:'div.thumb-wrap'

            });
            viewCard.store.loadData(workSpaceParam);
        workSpace.down('#list').add(viewCard);
              component.down('#contentPanel').add(workSpace);
        

        viewCard.on('itemclick',function(view,record,item,index){
            if(record.data.children){
                var subViewCard = Ext.create('Ext.view.View',{
                    store:'UsersStore',
                    tpl:new Ext.XTemplate(
                    '<tpl for=".">',
                    '<div style="margin: 10px 10px;float:left;width:140px;height:80px;background:#6CA6CD" class="thumb-wrap" >',
                          '<span>{text}</span>',
                        '</div>',
                    '</tpl>'
                    ),
                    itemSelector:'div.thumb-wrap'
                });
                subViewCard.store.loadData(record.data.children);
                workSpace.down('#list').removeAll();
                workSpace.down('#list').add(subViewCard);

            }else{
                var flag;
                var functionTab = Ext.create('Ext.Panel',{
                    html:'<span>这是'+record.data.text+'的工作区</span>',
                    title:record.data.text,
                    itemId:index
                });
                Ext.each(workSpace.items.items,function(obj3,index3){
                    if(obj3.itemId == functionTab.itemId){
                        workSpace.setActiveTab(obj3);
                        flag = 1;
                    }

                });
                if(flag!=1){
                workSpace.add(functionTab);
                workSpace.setActiveTab(functionTab);
                }
            }
        });
    },

    onMainViewAfterRender: function(component, eOpts) {
    	sysFunction.findMenus(function(result,status){
            //实例化菜单panel，并将data以参数形式传递进来
    		var menuPanel = Ext.create('Ext.Panel',{
                param:result.children,
                width:250,
                title:'系统功能',
                layout: 'accordion',
                collapseDirection: 'left'
            });
             //调用菜单panel组装方法，this代表当前的MainViewViewController
    		this.Evcorp.view.main.MainViewViewController.prototype.menuAssemble(menuPanel.param,component,menuPanel);
    	});
    },
    onCancelClick:function(button){
    	var sysWin = button.up('window');
    	sysWin.close();
    },
    onSaveParamClick:function(button){
    	var sysWin = button.up('window');
    	var passwordwinform = this.lookupReference('PassWordWinform');
    	var valid = passwordwinform.getForm().isValid();
    	if(valid){
    		passwordwinform.getForm().submit({
    			success : function(form, action) {
    				
                	if(action.result.info == null){
                		Ext.Msg.alert("提示","修改密码成功。");
                		sysWin.close();
                	}else{
                		Ext.Msg.alert("提示",action.result.info);
                		passwordwinform.getForm().reset();
                	}
    				
    			},
    			failure : function(form, action) {
    				Ext.Msg.alert("提示","系统错误，请联系管理员。");
    				sysWin.close();
    			}
    		}); 
    	}else{
    		Ext.Msg.alert("提示","请把字段填写完整.");
    	}
    }
});
