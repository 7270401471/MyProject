/*
 * File: app/view/menu/menuPanelViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Evcorp.view.common.UploadAttachmentPanelViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.uploadAttachmentPanelVC',
    onCreateClaimRule:function(){
    	var gridStore = this.getView().getViewModel().getStore('attachmentStore');
    	var form = this.getView().down('form');
    	var businessKey = form.getForm().getValues().businessKey;
    	var businessTypeName = form.getForm().getValues().businessTypeName;
    	var businessType = form.getForm().getValues().businessType;
    	
//		var accModel = new Evcorp.model.Attachment({
//			bizEntityCode:businessKey,
//			bizEntityType:businessType,
//			bizEntityTypeName:businessTypeName,
//			id:null
//		});
		
		var uploadWin = Ext.create({
    		xtype : 'attachmentUploadWindow',
    		width : '35%',
    		height: '50%',
    		closeAction : 'destroy',
    		listeners:{
    			beforeshow:function(){
    				uploadWin.down('form').getForm().setValues({
    					bizEntityType:businessType,
    					bizEntityTypeName:businessTypeName,
    					bizEntityCode:businessKey});
    			},
    			close:function(){
    				gridStore.reload();
    			}
    		}
    	});
		uploadWin.show();
//		gridStore.insert(0,accModel);
    },
    initAttachmentTypeCombo:function(){
    	var form = this.getView().down('form');
		var attachmentGrid = this.lookupReference('attachmentGrid');
		var selectModel = attachmentGrid.getSelectionModel().getSelection();
//    	var businessType = form.getForm().getValues().businessType;
		var businessType=selectModel[0].data.bizEntityType;
    	var typeStore = this.getView().getViewModel().getStore('attachmentTypeStore');
    	typeStore.load({params:{type:businessType}});
    },
    onUploadGridSelect:function(grid, td, cellIndex, record, tr, rowIndex, e, eOpts){
    	var upload = e.getTarget('.btn-upload');
    	var del = e.getTarget('.btn-danger');
    	var bizEntityType = record.data.bizEntityType;
    	var bizEntityCode = record.data.bizEntityCode;
    	var attachBizType = record.data.attachBizType;
    	var bizEntityTypeName = record.data.bizEntityTypeName;
    	var gridStore = this.getView().getViewModel().getStore('attachmentStore');
    	if(upload){
    		if(attachBizType==''||attachBizType==null){
    			Ext.Msg.alert('提示','请选择附件类型');
        	}else{
        		var uploadWin = Ext.create({
            		xtype : 'attachmentUploadWindow',
            		width : '60%',
            		height: '60%',
            		closeAction : 'destroy',
            		listeners:{
            			beforeshow:function(){
            				uploadWin.down('form').getForm().setValues({attachBizTypeCode:bizEntityType,bizEntityType:bizEntityTypeName,bizEntityCode:bizEntityCode});
            			},
            			close:function(){
            				gridStore.reload();
            			}
            		}
            	});
        		uploadWin.show();
        	}
    	}
    	if(del){
    		Ext.Msg.confirm('提示','确定要删除附件吗?',function(btn){
    			if(btn=='yes'){
    				Ext.Ajax.request({
        				url : 'attachment/deleteAttachment',
        				params : {
        					id : record.data.id
        				},
        	            method: 'POST',	
        				success : function(data) {
        					if(data.responseText=='success'){
        						gridStore.reload();
        					}
        				}
        			});
    			}
    		});
    	}
    }
});
