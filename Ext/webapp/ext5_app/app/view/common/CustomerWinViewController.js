/*
 * File: app/view/menu/menuPanelViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Evcorp.view.common.CustomerWinViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.customerWin',
    onQueryClick:function(){
    	var customerSearch = this.lookupReference('customerSearch');
    	var customerGrid = this.lookupReference('customerGrid');
    		var extraParams = {
        			cusName : customerSearch.getValue()
        			
        			};
    	var customerStore = customerGrid.getStore();
    	customerStore.on("beforeload", function(customerStore,
				operation, eOpts) {
			Ext.apply(customerStore.proxy.extraParams,
					extraParams);
		});
    	customerStore.loadPage(1, {
			"start" : 0,
			"limit" : 20
		});
    	
    },  
    change:function(){
		alert('sss');
	},
    onModifyClick: function (){
    
        //var customerForm = Ext.ComponentQuery.query("viewport orderlistwin form")[0];
        var customerForm = this.lookupReference('form');
     	var customer = Ext.create('Evcorp.model.Customer',  customerForm.getForm().getValues());
     	var customerId = customerForm.getForm().getValues().id;
     	var userType = customerForm.getForm().getValues().userType;
     	 
     	if(!customerId){
       	   Ext.Msg.alert("提示",'请先选择或新建一条记录后再编辑角色资料。');
       	   return;
       	}
     	
     	if(!customerForm.isValid()){
    		Ext.Msg.alert('提示','提交的字段必输项不能为空。');
    		return;
    	}
     	
     	if (!userType) {
     		Ext.Msg.alert('提示','请选择客户用户类型！');
     		return;
     	}
      
       customerForm.getForm().submit({
    	   waitMsg: '正在提交请稍后...', 
    	  
           success: function (form, action) {
        	   Ext.Msg.alert('提示','保存成功！');
		   },
		   failure: function (form, action) {
		        Ext.Msg.alert('failure','Failure');
		   } 
       });
    },
    onSalesOrderSelectCustomer: function(){
    	var grid = this.lookupReference('customerGrid');
		  var win = this.getView();
		  var seletedGird = grid.getSelectionModel().getSelection();
			if (seletedGird.length == 0) {
				Ext.Msg.alert("提示", '请选择一条记录');
				return;
			}else{
 				var saleOrderCusContactText=Ext.getCmp('saleOrderCusContact');
 				var salesOrderCusCodeText=Ext.getCmp('salesOrderCusCode');
 				var salesOrderCusAddrText=Ext.getCmp('salesOrderCusAddr');
 				var salesOrderCusNameText=Ext.getCmp('salesOrderCusName');
 				var salesOrderCusIdText=Ext.getCmp('salesOrderCusId');
 				saleOrderCusContactText.setValue(seletedGird[0].get('phone'));
 				salesOrderCusCodeText.setValue(seletedGird[0].get('cusCode'));
 				salesOrderCusAddrText.setValue(seletedGird[0].get('address'));
 				salesOrderCusNameText.setValue(seletedGird[0].get('cusName'));
 				salesOrderCusIdText.setValue(seletedGird[0].get('customerCid'));
 				win.close();
			}
    },
    onChoiceClick:function(){
		  var grid = this.lookupReference('customerGrid');
		  var win = this.getView();
		  var seletedGird = grid.getSelectionModel().getSelection();
		  var propertyText = Ext.ComponentQuery.query('#cusName')[0];
		  propertyText.setValue(seletedGird[0].get('cusName'));
		  var propertyText = Ext.ComponentQuery.query('#telphone')[0];
		  propertyText.setValue(seletedGird[0].get('telphone'));
		  var propertyText = Ext.ComponentQuery.query('#phone')[0];
		  propertyText.setValue(seletedGird[0].get('phone'));
		  var propertyText = Ext.ComponentQuery.query('#gender')[0];
		  propertyText.setValue(seletedGird[0].get('gender'));
		  var propertyText = Ext.ComponentQuery.query('#customerCid')[0];
		  propertyText.setValue(seletedGird[0].get('customerCid'));
		  var propertyText = Ext.ComponentQuery.query('#email')[0];
		  propertyText.setValue(seletedGird[0].get('email'));
		  var propertyText = Ext.ComponentQuery.query('#otherContacts')[0];
		  propertyText.setValue(seletedGird[0].get('otherContacts'));
		  var propertyText = Ext.ComponentQuery.query('#address')[0];
		  propertyText.setValue(seletedGird[0].get('address'));
		  var propertyText = Ext.ComponentQuery.query('#maritalStatus')[0];
//		  var married="";
//
//		  if(seletedGird[0].get('maritalStatus') == '1'){
//			  married = "已婚";
//		  }
//		  if(seletedGird[0].get('maritalStatus') == '2'){
//			  married= "未婚";
//		  }
//		  propertyText.setValue(married);
		  propertyText.setValue(seletedGird[0].get('maritalStatus'));
		  var propertyText = Ext.ComponentQuery.query('#familyNumber')[0];
		  propertyText.setValue(seletedGird[0].get('familyNumber'));
		  var propertyText = Ext.ComponentQuery.query('#residentialAddress')[0];
		  propertyText.setValue(seletedGird[0].get('residentialAddress'));
		  var propertyText = Ext.ComponentQuery.query('#education')[0];
		  propertyText.setValue(seletedGird[0].get('education'));
		  var propertyText = Ext.ComponentQuery.query('#cusCode')[0];
		  propertyText.setValue(seletedGird[0].get('cusCode'));
		  
		  var propertyText = Ext.ComponentQuery.query('#residentialZipCode')[0];
		  propertyText.setValue(seletedGird[0].get('residentialZipCode'));
		  var propertyText = Ext.ComponentQuery.query('#userType')[0];
		  propertyText.setValue(seletedGird[0].get('userType'));
		 
		  win.close();
		
	  },
	  
	  onCustomerGridSelect : function (grid, record, index) {
			
	    	var customerGrid = this.lookupReference('customerGrid');
	    	var customerId = record.data.id;
	    	
	    	if(customerId != null ){
	    		
	    		var uploadBankCardInfoAttachmentPanel = this.lookupReference('uploadBankCardInfoAttachmentPanel');
	    		var bankCardInfoListStore = this.getViewModel().getStore('bankCardInfoListStore');
	    		bankCardInfoListStore.load({
			    	params:{ customerId: customerId },
	    	    	callback: function(records, options, success){
	    	    		
	    	    		// 加载支付信息附件
	    	        	var businessKey = []; // 附件业务实体编号：银行卡卡号
	    	        	var businessType = 'attachBizEntityType_YHK'; // 附件业务实体类型：银行卡代码
	    	        	var businessTypeName = '银行卡'; // 附件业务实体类型名称：银行卡（理论上从字典表去nameCn字段）
	    	        	
	    	        	for(var i =0;records && i<records.length;i++){
	    	        		var r = records[i] //遍历每一行
	    	        		if (r.data.bankAccountNo) {
	    	        			businessKey[i] = r.data.bankAccountNo;
	    	        		}
	    	        	}
	    	        	
	    	    		if(uploadBankCardInfoAttachmentPanel!=null){
	    	    			var attachmentStore = uploadBankCardInfoAttachmentPanel.getViewModel().getStore('attachmentStore');
	    	    			if(attachmentStore!=null){
	    	    				attachmentStore.load({params:{bizEntityCode:businessKey, bizEntityType:businessType}});
	    	    			}
	    	    			var typeStore = uploadBankCardInfoAttachmentPanel.getViewModel().getStore('attachmentTypeStore');
	    	    	    	typeStore.load({params:{type:businessType}});
	    	    	    	var form = uploadBankCardInfoAttachmentPanel.down('form');
	    	    	    	if(form!=null){
	    	    	    		form.getForm().setValues({businessKey:businessKey,businessType:businessType,businessTypeName:businessTypeName});
	    	    	    	}
	    	    	    	// 隐藏新增按钮
	    	    	    	var addBtn = uploadBankCardInfoAttachmentPanel.down('button');
	    	    	    	if (addBtn) {
	    	    	    		addBtn.setHidden(true);
	    	    	    	}
	    	    		}
	    	    		
	    	    	},
		    	});
	    	}
	    	
	    },	    
	});
