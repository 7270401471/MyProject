/*
 * File: app/view/menu/menuPanelViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Evcorp.view.orderList.OrderListWinViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.orderlistwin',
    onQueryClick:function(){
    	var customerSearch = this.lookupReference('customerSearch');
    	var customerGrid = this.lookupReference('customerGrid');
    		var extraParams = {
        			cusName : customerSearch.getValue()
        			
        			};
    	var customerStore = customerGrid.getStore();
    	customerStore.on("beforeload", function(customerStore,
				operation, eOpts) {
			Ext.apply(customerStore.proxy.extraParams,
					extraParams);
		});
    	customerStore.loadPage(1, {
			"start" : 0,
			"limit" : 20
		});
    	
    },  
    change:function(){
		alert('sss');
	},
    onModifyClick: function (){
    
        //var customerForm = Ext.ComponentQuery.query("viewport orderlistwin form")[0];
        var customerForm = this.lookupReference('form');
     	var customer = Ext.create('Evcorp.model.Customer',  customerForm.getForm().getValues());
     	var customerId = customerForm.getForm().getValues().id;
     	var userType = customerForm.getForm().getValues().userType;
     	 
     	if(!customerId){
       	   Ext.Msg.alert("提示",'请先选择或新建一条记录后再编辑角色资料。');
       	   return;
       	}
     	
     	if(!customerForm.isValid()){
    		Ext.Msg.alert('提示','提交的字段必输项不能为空。');
    		return;
    	}
     	
     	if (!userType) {
     		Ext.Msg.alert('提示','请选择客户用户类型！');
     		return;
     	}
      
       customerForm.getForm().submit({
    	   waitMsg: '正在提交请稍后...', 
    	  
           success: function (form, action) {
        	 
   		  	
		   },
		   failure: function (form, action) {
		        Ext.Msg.alert('failure','Failure');
		   } 
       });
    },
    onRefreshClick: function(){
        var userGrid = Ext.ComponentQuery.query("viewport orderlistwin grid")[0];
        var userStore = userGrid.getStore(); 
        userStore.reload(); 
        
    },
    onChoiceClick:function(){
		  var grid = this.lookupReference('customerGrid');
		  var win = this.getView();
		  var seletedGird = grid.getSelectionModel().getSelection();
		  var propertyText = Ext.ComponentQuery.query('#cusName')[0];
		  propertyText.setValue(seletedGird[0].get('cusName'));
		  var propertyText = Ext.ComponentQuery.query('#telphone')[0];
		  propertyText.setValue(seletedGird[0].get('telphone'));
		  var propertyText = Ext.ComponentQuery.query('#phone')[0];
		  propertyText.setValue(seletedGird[0].get('phone'));
		  var propertyText = Ext.ComponentQuery.query('#gender')[0];
//		  var gender = "";
//		 
//		  if(seletedGird[0].get('gender') == 1){
//			  gender = "男";
//		  }
//		  if(seletedGird[0].get('gender') == 2){
//			  gender= "女";
//		  }
//		  propertyText.setValue(gender);
		 
		  propertyText.setValue(seletedGird[0].get('gender'));
		  var propertyText = Ext.ComponentQuery.query('#customerCid')[0];
		  propertyText.setValue(seletedGird[0].get('customerCid'));
		  var propertyText = Ext.ComponentQuery.query('#email')[0];
		  propertyText.setValue(seletedGird[0].get('email'));
		  var propertyText = Ext.ComponentQuery.query('#otherContacts')[0];
		  propertyText.setValue(seletedGird[0].get('otherContacts'));
		  var propertyText = Ext.ComponentQuery.query('#address')[0];
		  propertyText.setValue(seletedGird[0].get('address'));
		  var propertyText = Ext.ComponentQuery.query('#maritalStatus')[0];
//		  var married="";
//
//		  if(seletedGird[0].get('maritalStatus') == '1'){
//			  married = "已婚";
//		  }
//		  if(seletedGird[0].get('maritalStatus') == '2'){
//			  married= "未婚";
//		  }
//		  propertyText.setValue(married);
		  propertyText.setValue(seletedGird[0].get('maritalStatus'));
		  var propertyText = Ext.ComponentQuery.query('#familyNumber')[0];
		  propertyText.setValue(seletedGird[0].get('familyNumber'));
		  var propertyText = Ext.ComponentQuery.query('#residentialAddress')[0];
		  propertyText.setValue(seletedGird[0].get('residentialAddress'));
		  var propertyText = Ext.ComponentQuery.query('#education')[0];
		  propertyText.setValue(seletedGird[0].get('education'));
		  var propertyText = Ext.ComponentQuery.query('#cusCode')[0];
		  propertyText.setValue(seletedGird[0].get('cusCode'));
		  
		  var propertyText = Ext.ComponentQuery.query('#residentialZipCode')[0];
		  propertyText.setValue(seletedGird[0].get('residentialZipCode'));
		  var propertyText = Ext.ComponentQuery.query('#userType')[0];
		  propertyText.setValue(seletedGird[0].get('userType'));
		 
		  win.close();
		
	  },
	  
	  onCustomerGridSelect : function (grid, record, index) {
			
	    	var customerGrid = this.lookupReference('customerGrid');
	    	var customerId = record.data.id;
	    	
	    	if(customerId != null ){
	    		
	    		var uploadBankCardInfoAttachmentPanel = this.lookupReference('uploadBankCardInfoAttachmentPanel');
	    		var bankCardInfoListStore = this.getViewModel().getStore('bankCardInfoListStore');
	    		bankCardInfoListStore.load({
			    	params:{ customerId: customerId },
	    	    	callback: function(records, options, success){
	    	    		
	    	    		// 加载支付信息附件
	    	        	var businessKey = []; // 附件业务实体编号：银行卡卡号
	    	        	var businessType = 'attachBizEntityType_YHK'; // 附件业务实体类型：银行卡代码
	    	        	var businessTypeName = '银行卡'; // 附件业务实体类型名称：银行卡（理论上从字典表去nameCn字段）
	    	        	
	    	        	for(var i =0;records && i<records.length;i++){
	    	        		var r = records[i] //遍历每一行
	    	        		if (r.data.bankAccountNo) {
	    	        			businessKey[i] = r.data.bankAccountNo;
	    	        		}
	    	        	}
	    	        	
	    	    		if(uploadBankCardInfoAttachmentPanel!=null){
	    	    			var attachmentStore = uploadBankCardInfoAttachmentPanel.getViewModel().getStore('attachmentStore');
	    	    			if(attachmentStore!=null){
	    	    				attachmentStore.load({params:{bizEntityCode:businessKey, bizEntityType:businessType}});
	    	    			}
	    	    			var typeStore = uploadBankCardInfoAttachmentPanel.getViewModel().getStore('attachmentTypeStore');
	    	    	    	typeStore.load({params:{type:businessType}});
	    	    	    	var form = uploadBankCardInfoAttachmentPanel.down('form');
	    	    	    	if(form!=null){
	    	    	    		form.getForm().setValues({businessKey:businessKey,businessType:businessType,businessTypeName:businessTypeName});
	    	    	    	}
	    	    	    	// 隐藏新增按钮
	    	    	    	var addBtn = uploadBankCardInfoAttachmentPanel.down('button');
	    	    	    	if (addBtn) {
	    	    	    		addBtn.setHidden(true);
	    	    	    	}
	    	    		}
	    	    		
	    	    	},
		    	});
	    	}
	    	
	    },
	    
	  // 新建银行卡
	  onBankCardInfoAddClick : function() {
			
			var customerGrid = this.lookupReference('customerGrid');
			
			var seletedGird = customerGrid.getSelectionModel().getSelection();
			if (seletedGird && seletedGird.length>0) {
				var id = seletedGird[0].get('id');
				if (!id || id<0) {
					Ext.Msg.alert("提示",'请先保存银行卡信息后再进行新建支付信息操作。');
					return;
				}
			} else {
				Ext.Msg.alert("提示",'请先选择或新建一条记录后再编辑银行卡信息。');
				return;
			}
			
			var customerId = seletedGird[0].get('id');
			var bankCardInfoGrid = this.lookupReference('bankCardInfoGrid');
	        var bankCardInfoGridStore = bankCardInfoGrid.getStore(); 
	        var newModel = new Evcorp.model.BankCardInfo({ id:null, customerId:customerId });
	        bankCardInfoGridStore.insert(0, newModel);
	        bankCardInfoGrid.getSelectionModel().select(newModel);
			
		},
	  // 银行卡信息保存
	  onBankCardInfoSaveClick : function(grid, rowIndex) {
	
		  var grdiStore = grid.getStore();
		  
		  var rec = grdiStore.getAt(rowIndex);
		  var id = rec.get('id');
		  var customerId = rec.get('customerId');
		  var bankAccountName = Ext.util.Format.trim(rec.get('bankAccountName'));
		  var bankAccountNo = Ext.util.Format.trim(rec.get('bankAccountNo'));
		  var bankOpenPlace = Ext.util.Format.trim(rec.get('bankOpenPlace'));
		  if (!customerId) {
		  	Ext.Msg.alert("提示",'请先选择或新建一条客户记录后再编辑银行卡信息。');
		  	return;
		  }
		  if (!bankAccountName || !bankAccountNo || !bankOpenPlace) {
		  	Ext.Msg.alert("提示",'请输入银行卡必填信息！');
		  	return;
		  }
		  var customerGrid = this.lookupReference('customerGrid');
		  // 新增、修改操作
		  Ext.Ajax.request({
				url : 'customer/saveOrUpdateBankCardInfo',
				params : {
					"id":id,
					"customerId":customerId,
					"bankAccountName":bankAccountName,
					"bankAccountNo":bankAccountNo,
					"bankOpenPlace":bankOpenPlace,
				},
				async : false,
				success : function(response) {
					if(response.status==200 && response.statusText=='OK'){
						var result = JSON.parse(response.responseText);
						var type = result.type;
						var errorMsg = result.errorMsg;
						if (errorMsg) {
							Ext.Msg.alert("提示", errorMsg);
						} else {
							if (type < 0) {
								Ext.Msg.alert("提示","新增成功！")
							} else {
								Ext.Msg.alert("提示","修改成功！")
							}
							grdiStore.reload();
							
							var seletedGird = customerGrid.getSelectionModel().getSelection();
							var customerCode = seletedGird[0].data.cusCode;
							var bankCardInfoStore = Ext.ComponentQuery.query("viewport orderlistpanel")[0].viewModel.getStore('bankCardInfoStore');
							bankCardInfoStore.load({
								params:{customerCode:customerCode}
							});
						}
					}else{
		          		Ext.Msg.alert("提示","系统错误,操作失败!");
		          	}
				}
		  });
	},
	// 银行卡信息删除
	onBankCardInfoRemoveClick : function(grid, rowIndex) {
	    var grdiStore = grid.getStore();
	    
	    var rec = grdiStore.getAt(rowIndex);
	    var id = rec.get('id');
	    var customerId = rec.get('customerId');
	    if (!customerId) {
	    	Ext.Msg.alert("提示",'请先选择或新建一条记录后再编辑银行卡信息。');
	    	return;
	    }
		if (id && id>=0) {
			var customerGrid = this.lookupReference('customerGrid');
			Ext.MessageBox.confirm('提示', '确定删除该记录?', function(btn) {
				if (btn != 'yes') {
					return;
				}
				// 删除操作
				Ext.Ajax.request({
					url : 'customer/deleteBankCardInfo',
					params : {
						'id' : id,
					},
					async : false,
					success : function(response) {
						if(response.status==200 && response.statusText=='OK'){
							var responseText = JSON.parse(response.responseText);
							if (responseText.result=='failure' && responseText.errorMsg) {
								Ext.Msg.alert("提示", responseText.errorMsg)
							} else {
								Ext.Msg.alert("提示","删除成功！")
								grdiStore.reload();
								var seletedGird = customerGrid.getSelectionModel().getSelection();
								var customerCode = seletedGird[0].data.cusCode;
								var bankCardInfoStore = Ext.ComponentQuery.query("viewport orderlistpanel")[0].viewModel.getStore('bankCardInfoStore');
								bankCardInfoStore.load({
									params:{customerCode:customerCode}
								});
							}
						}else{
	                		Ext.Msg.alert("提示","系统错误,操作失败!");
	                	}
					}
				});
			});
		} else {
			grdiStore.removeAt(rowIndex);
		}
	},
	
	// 上传银行卡信息附件
	onUploadBankCardInfoClick : function (grid, rowIndex) {
		var ccsaGridStore = grid.getStore();
	    var rec = ccsaGridStore.getAt(rowIndex);
	    var id = rec.get('id');
	    var bankAccountNo = rec.get('bankAccountNo');
	    if (!id || id<0) {
	    	Ext.Msg.alert('提示','请先保存银行卡后再进行上传操作！');
	    	return;
	    }
	    if (!bankAccountNo) {
	    	Ext.Msg.alert('提示','银行卡帐号为空，无法进行上传操作！');
	    }
    	var businessKey = bankAccountNo; // 附件业务实体编号：银行卡卡号
    	var businessType = 'attachBizEntityType_YHK'; // 附件业务实体类型：银行卡代码
    	var businessTypeName = '银行卡'; // 附件业务实体类型名称：银行卡（理论上从字典表去nameCn字段）
		
    	var uploadAttachmenWin = Ext.create({
			xtype:'UploadAttachmentWin',
			width : 800,
			height : '60%',
			businessKey:businessKey,
			businessType:businessType,
			businessTypeName:businessTypeName,
			closeAction : 'destroy'
		});
		var uploadAttachmentPanel = uploadAttachmenWin.down('#uploadAttachmentPanelItemId');// 附件Panel
		uploadAttachmentPanel.setTitle('');
		uploadAttachmenWin.show();
	},
	
});
