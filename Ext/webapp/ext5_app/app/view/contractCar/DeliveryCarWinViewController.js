/*
 * File: app/view/menu/menuPanelViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Evcorp.view.contractCar.DeliveryCarWinViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.DeliveryCarWin',
    initWindow:function(){
    	var win = this.getView();
    	var olPreSaleOrderNo = '';
    	var store = win.getViewModel().getStore('detail');
		if(store!=null){
			store.load({
				params:{businessKey:win.businessKey},
				callback: function(rr, operation, success) {
					if(success){
						olPreSaleOrderNo = rr[0].data.olPreSaleOrderNo;
						var orderListDetailPanel = win.down('orderlistdetails');
						var orderDetailTab = orderListDetailPanel.lookupReference('orderDetailTab');
						orderDetailTab.tabBar.items.items[0].hide();
						orderDetailTab.items.items[0].hide();
						orderDetailTab.items.items[1].show();
						if(orderListDetailPanel!=null){
							var contractCarOrderDetailListStore = win.getViewModel().getStore('contractCarOrderDetailListStore');
							if(contractCarOrderDetailListStore!=null)
								contractCarOrderDetailListStore.load({params:{orderNo:win.businessKey}});
							var contractCarOrderPayLogListStore = orderListDetailPanel.getViewModel().getStore('contractCarOrderPayLogListStore');
				    		if(contractCarOrderPayLogListStore!=null)
								contractCarOrderPayLogListStore.load({params:{orderNo: win.businessKey}});
				    		var replaymentPlanListStore = orderListDetailPanel.getViewModel().getStore('replaymentPlanListStore');
				    		if(replaymentPlanListStore!=null)
					    		replaymentPlanListStore.load({params:{orderNo: win.businessKey}});
				    		
				    		var businessKey = olPreSaleOrderNo; // 附件业务实体编号：征信材料编号
	        	        	var businessType = 'attachBizEntityType_ZXCL'; // 附件业务实体类型：征信材料代码
	        	        	var businessTypeName = '征信材料'; // 附件业务实体类型名称：征信材料（理论上从字典表去nameCn字段
	        	        	
	        	        	var creditattachmentStore = orderListDetailPanel.getViewModel().getStore('creditattachmentStore');
	    	    			if(creditattachmentStore!=null){
	    	    				creditattachmentStore.load({params:{bizEntityCode:businessKey,bizEntityType:businessType}});
	    	    			}
	    	    			var credittypeStore = orderListDetailPanel.getViewModel().getStore('creditattachmentTypeStore');
	    	    			credittypeStore.load({params:{type:businessType}});
				    		
							var contractCarSuppleAgreementListStore = orderListDetailPanel.getViewModel().getStore('contractCarSuppleAgreementListStore');
							if(contractCarSuppleAgreementListStore!=null){
								// 加载附件补充协议
					    		contractCarSuppleAgreementListStore.load({
					    	    	params:{orderNo:win.businessKey},
					        	});
							}
						}
					}
			    }
			});
		}
    },
 // 保存车辆及保险信息（订单详情）
    onSaveContractCarOrderDetailClick : function () {
    	var win = this.getView();
    	var orderListDetailPanel = win.down('orderlistdetails');
    	var form = orderListDetailPanel.lookupReference('taskDetailForm');
    	var orderCount = form.getForm().getValues().orderCount;
    	var olPreSaleOrderNo = form.getForm().getValues().olPreSaleOrderNo;
	   var gridStore = win.getViewModel().getStore('contractCarOrderDetailListStore');
	   var firstRecord = gridStore.getAt(0);
	   if(this.getViewModel().getStore('contractCarOrderDetailListStore').getUpdatedRecords().length == 0 &&　firstRecord.get('id') != -1){
		   Ext.Msg.alert('提示','你未进行任何添加或修改操作');
		   return false;
	   } else if (gridStore.data.length>orderCount) {
		   Ext.Msg.alert('提示','调配车辆个数不能多于订单数量！');
		   return false;
	   } else{
		   var flag = typeof(firstRecord.get('carFrameNo'))=='undefined' && typeof(firstRecord.get('carLicensePlate'))=='undefined' &&typeof(firstRecord.get('carDriveLicenseNo'))=='undefined';
		   if (typeof(firstRecord.get('contractCarOrderId'))=='undefined' || typeof(firstRecord.get('olPreSaleOrderNo'))=='undefined') {
			   Ext.Msg.alert("提示",'请先选择或新建一条订单记录后再编辑车辆及保险信息。');
			   return false;
		   }
		   if(flag){
			   Ext.Msg.alert('提示','提交的数据中不能包含空值');
			   return false;
		   }else{
			   var flag = 0;
			   var modelArray = this.getViewModel().getStore('contractCarOrderDetailListStore').getModifiedRecords();
			   Ext.each(modelArray, function(obj,index){
				   if (!obj.get('contractCarOrderId')) {
					   Ext.Msg.alert("提示",'请先选择或新建一条订单记录后再编辑车辆及保险信息。');
					   return false;
				   }
				   if(!obj.get('carFrameNo') || !obj.get('carLicensePlate') || !obj.get('carEngineNo') || !obj.get('carDriveLicenseNo')){
					   Ext.Msg.alert('提示','提交的数据中不能包含空值');
					   flag = 2;
					   return false;
				   }
			   });
			   if(flag == 0){
				   gridStore.sync({
								success: function(ba,op){
								   Ext.Msg.alert("提示","保存车辆及保险信息成功！");
								   gridStore.reload();
							   },
							   failure: function(ba,op){
								   Ext.Msg.alert("提示",ba.exceptions[0].getError());
							   }
						   }); 
			   }
		   }
	   }
    },
    insuranceCompanyEditor:function(value){
		if(value!=undefined){
			var insuranceCompanyStore=this.getView().getViewModel().getStore('insuranceCompanyStore');
			return insuranceCompanyStore.findRecord('code', value).data.nameCn;
		}
	},
	onSubmitClick:function(){
		var win = this.getView();
    	var taskId = win.taskId;
    	var processInstanceId = win.processInstanceId;
    	var businessKey = win.businessKey;
    	var comment = this.lookupReference('commentForm').getForm().getValues().comment;
    	win.mask("请稍等，正在处理中...","x-mask-loading");
    	Ext.Ajax.request({
			url : 'ccOrder/checkAndTakeCarSubmit',
			params : {
				taskId : taskId,
				processInstanceId : processInstanceId,
				businessKey : businessKey,
				comment : comment
			},
            method: 'POST',	
			success : function(data) {
				win.unmask();
				Ext.Msg.alert("提示",'提交成功',function(){
	    			var myActiveTaskGrid = Ext.ComponentQuery.query('#myActiveTaskGrid')[0];
	    			var myActiveTaskStore = myActiveTaskGrid.getStore();
	    			myActiveTaskStore.loadPage(1 ,{"start":0,"limit":20});
	    			var eastPanel = Ext.ComponentQuery.query("#eastPanelId")[0];
	    	        eastPanel.removeAll();
	    			win.close();
	    		});
			}
		});
	},
	onUploadCarBXClick : function (grid, rowIndex) {
    	var ccsaGridStore = grid.getStore();
        var rec = ccsaGridStore.getAt(rowIndex);
        var suppleAgreementNo = rec.get('suppleAgreementNo');
        var businessKey = suppleAgreementNo; // 附件业务实体编号：租赁合同编号
    	var businessType = 'attachBizEntityType_ZLHT'; // 附件业务实体类型：租赁合同代码
    	var businessTypeName = '租赁合同'; // 附件业务实体类型名称：租赁合同（理论上从字典表去nameCn字段）
    	
    	var uploadAttachmenWin = Ext.create({
			xtype:'UploadAttachmentWin',
			width : 800,
			height : '60%',
			businessKey:businessKey,
			businessType:businessType,
			businessTypeName:businessTypeName,
			closeAction : 'destroy'
		});
		var uploadAttachmentPanel = uploadAttachmenWin.down('#uploadAttachmentPanelItemId');// 附件Panel
		uploadAttachmentPanel.setTitle('');
		uploadAttachmenWin.show();
    }
});
