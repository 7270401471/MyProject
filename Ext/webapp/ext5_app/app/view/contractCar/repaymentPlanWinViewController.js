/*
 * File: app/view/menu/menuPanelViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Evcorp.view.contractCar.repaymentPlanWinViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.repaymentPlanWin',
    initWindow:function(){
    	var win = this.getView();
    	var olPreSaleOrderNo = '';
    	var store = win.getViewModel().getStore('detail');
		if(store!=null){
			store.load({
				params:{businessKey:win.businessKey},
				callback: function(rr, operation, success) {
					if(success){
						olPreSaleOrderNo = rr[0].data.olPreSaleOrderNo;
						var orderListDetailPanel = win.down('orderlistdetails');
						var orderDetailTab = orderListDetailPanel.lookupReference('orderDetailTab');
						orderDetailTab.tabBar.items.items[4].hide();
						if(orderListDetailPanel!=null){
							var contractCarOrderDetailListStore = orderListDetailPanel.getViewModel().getStore('contractCarOrderDetailListStore');
							if(contractCarOrderDetailListStore!=null)
								contractCarOrderDetailListStore.load({params:{orderNo:win.businessKey}});
							var contractCarOrderPayLogListStore = orderListDetailPanel.getViewModel().getStore('contractCarOrderPayLogListStore');
				    		if(contractCarOrderPayLogListStore!=null)
								contractCarOrderPayLogListStore.load({params:{orderNo: win.businessKey}});
				    		var replaymentPlanListStore = win.getViewModel().getStore('replaymentPlanListStore');
				    		if(replaymentPlanListStore!=null)
					    		replaymentPlanListStore.load({params:{orderNo: win.businessKey}});
							var contractCarSuppleAgreementListStore = win.getViewModel().getStore('contractCarSuppleAgreementListStore');
							if(contractCarSuppleAgreementListStore!=null){
								// 加载附件补充协议
					    		contractCarSuppleAgreementListStore.load({params:{orderNo:win.businessKey}});
							}
							var bankCardInfoStore = win.getViewModel().getStore('bankCardInfoStore');
							var customerCode = orderListDetailPanel.lookupReference('taskDetailForm').getForm().getValues().customerCode;
							bankCardInfoStore.load({params:{customerCode:customerCode}});
							
							var businessKey = olPreSaleOrderNo; // 附件业务实体编号：征信材料编号
	        	        	var businessType = 'attachBizEntityType_ZXCL'; // 附件业务实体类型：征信材料代码
	        	        	var businessTypeName = '征信材料'; // 附件业务实体类型名称：征信材料（理论上从字典表去nameCn字段
	        	        	
	        	        	var creditattachmentStore = orderListDetailPanel.getViewModel().getStore('creditattachmentStore');
	    	    			if(creditattachmentStore!=null){
	    	    				creditattachmentStore.load({params:{bizEntityCode:businessKey,bizEntityType:businessType}});
	    	    			}
	    	    			var credittypeStore = orderListDetailPanel.getViewModel().getStore('creditattachmentTypeStore');
	    	    			credittypeStore.load({params:{type:businessType}});
						}
					}
			    }
			});
		}
    },
 // 导入还款计划
	onImportReplaymentPlanClick:function (field, value) {
		var ccsaReplaymentPlanGrid = this.lookupReference('ccsaReplaymentPlanGrid');
		var seletedGird = ccsaReplaymentPlanGrid.getSelectionModel().getSelection();
		var contractCarOrderId = null;
		var suppleAgreementId = null;
		if (seletedGird && seletedGird.length>0) {
			contractCarOrderId = seletedGird[0].get('contractCarOrderId');
			suppleAgreementId = seletedGird[0].data.id;
			if (!suppleAgreementId || suppleAgreementId<0) {
				Ext.Msg.alert("提示",'请先选择车辆再进行导入还款计划信息操作。');
				return;
			}
		} else {
			Ext.Msg.alert("提示",'请先选择车辆再进行导入还款计划信息操作。');
			return;
		}
		if (!this.lookupReference('fileUploadRef').value) {
			Ext.Msg.alert("提示",'请选择要导入的还款计划文件！');
			return;
		}
    	var replaymentPlanForm = this.lookupReference('replaymentPlanForm');
    	var gridStore = this.getViewModel().getStore('replaymentPlanListStore');
    	replaymentPlanForm.getForm().submit({
    		params : {
				contractCarOrderId : contractCarOrderId,
				suppleAgreementId : suppleAgreementId,
			},
            waitMsg: '正在导入...',
            success: function(form, action) {
            	if(action.result.info == null){
            		Ext.Msg.alert("提示", '导入成功！');
            		gridStore.load({
        		    	params:{ suppleAgreementId: suppleAgreementId}
        	    	});
            	}else{
            		Ext.Msg.alert("提示",action.result.info);
            	}
            },
			failure : function(form, action) {
				Ext.Msg.alert('提示',action.result.info);
			}
        });
	},
	// 下载还款计划导入模板
	onDownReplaymentPlanClick:function () {
		window.open('ccOrder/downloadTempFile?fileName=还款计划导入模板');
	},
	onSubmitClick:function(){
		var win = this.getView();
    	var taskId = win.taskId;
    	var processInstanceId = win.processInstanceId;
    	var businessKey = win.businessKey;
    	win.mask("请稍等，正在处理中...","x-mask-loading");
    	Ext.Ajax.request({
			url : 'ccOrder/makeRepaymentPlanSubmit',
			params : {
				taskId : taskId,
				processInstanceId : processInstanceId,
				businessKey : businessKey
			},
            method: 'POST',	
			success : function(data) {
				win.unmask();
				var result = JSON.parse(data.responseText);
				console.log(result);
				var success = result.success;
				var msg = result.msg;
				if(success=='success'){
					Ext.Msg.alert("提示",'提交成功',function(){
		    			var myActiveTaskGrid = Ext.ComponentQuery.query('#myActiveTaskGrid')[0];
		    			var myActiveTaskStore = myActiveTaskGrid.getStore();
		    			myActiveTaskStore.loadPage(1 ,{"start":0,"limit":20});
		    			var eastPanel = Ext.ComponentQuery.query("#eastPanelId")[0];
		    	        eastPanel.removeAll();
		    			win.close();
		    		});
				}else{
					Ext.Msg.alert("提示", msg);
				}
			}
		});
	},
	bankCardInfoEditor:function(value){
		if(value){
			var bankCardInfoStore=this.getView().getViewModel().getStore('bankCardInfoStore');
			if (bankCardInfoStore.findRecord('id', value)) {
				return bankCardInfoStore.findRecord('id', value).data.bankAccountInfo;
			}
			return '';
		} else {
			return '';
		}
	},
	// 还款计划选中项中，补充协议选中事件
    onCcsaReplaymentPlanGridSelect : function (grid, record, index) {
    	var contractCarOrderPayLogGrid = this.lookupReference('contractCarOrderPayLogGrid');
    	var suppleAgreementId = record.data.id;
    	if(suppleAgreementId != null ){
    		// 加载还款计划
    		var replaymentPlanListStore = this.getViewModel().getStore('replaymentPlanListStore');
    		replaymentPlanListStore.load({
		    	params:{ suppleAgreementId: suppleAgreementId}
	    	});
    	}
    	
    },
});
