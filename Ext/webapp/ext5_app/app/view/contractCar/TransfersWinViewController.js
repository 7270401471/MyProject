/*
 * File: app/view/menu/menuPanelViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Evcorp.view.contractCar.TransfersWinViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.TransfersWin',
    initWindow:function(){
    	var win = this.getView();
    	var olPreSaleOrderNo = '';
    	var store = win.getViewModel().getStore('detail');
		if(store!=null){
			store.load({
				params:{businessKey:win.businessKey},
				callback: function(rr, operation, success) {
					if(success){
						olPreSaleOrderNo = rr[0].data.olPreSaleOrderNo;
						var orderListDetailPanel = win.down('orderlistdetails');
						var orderDetailTab = orderListDetailPanel.lookupReference('orderDetailTab');
						orderDetailTab.tabBar.items.items[0].hide();
						orderDetailTab.items.items[0].hide();
						orderDetailTab.items.items[1].show();
						if(orderListDetailPanel!=null){
							var contractCarOrderDetailListStore = win.getViewModel().getStore('contractCarOrderDetailListStore');
							if(contractCarOrderDetailListStore!=null)
								contractCarOrderDetailListStore.load({params:{orderNo:win.businessKey}});
							var contractCarOrderPayLogListStore = orderListDetailPanel.getViewModel().getStore('contractCarOrderPayLogListStore');
				    		if(contractCarOrderPayLogListStore!=null)
								contractCarOrderPayLogListStore.load({params:{orderNo: win.businessKey}});
				    		var replaymentPlanListStore = orderListDetailPanel.getViewModel().getStore('replaymentPlanListStore');
				    		if(replaymentPlanListStore!=null)
					    		replaymentPlanListStore.load({params:{orderNo: win.businessKey}});
				    		var businessKey = olPreSaleOrderNo; // 附件业务实体编号：征信材料编号
	        	        	var businessType = 'attachBizEntityType_ZXCL'; // 附件业务实体类型：征信材料代码
	        	        	var businessTypeName = '征信材料'; // 附件业务实体类型名称：征信材料（理论上从字典表去nameCn字段
	        	        	
	        	        	var creditattachmentStore = orderListDetailPanel.getViewModel().getStore('creditattachmentStore');
	    	    			if(creditattachmentStore!=null){
	    	    				creditattachmentStore.load({params:{bizEntityCode:businessKey,bizEntityType:businessType}});
	    	    			}
	    	    			var credittypeStore = orderListDetailPanel.getViewModel().getStore('creditattachmentTypeStore');
	    	    			credittypeStore.load({params:{type:businessType}});
							var contractCarSuppleAgreementListStore = orderListDetailPanel.getViewModel().getStore('contractCarSuppleAgreementListStore');
							if(contractCarSuppleAgreementListStore!=null){
								// 加载附件补充协议
					    		contractCarSuppleAgreementListStore.load({
					    	    	params:{orderNo:win.businessKey},
					    	    	callback: function(records, options, success){
					    	    		// 加载车辆及保险信息附件
					    	        	/*var businessKey = []; // 附件业务实体编号：资产管理编号
					    	        	var businessType = 'attachBizEntityType_ZCGL'; // 附件业务实体类型：资产管理代码
					    	        	var businessTypeName = '资产管理'; // 附件业务实体类型名称：资产管理（理论上从字典表去nameCn字段）
					    	        	
					    	        	for(var i =0;records && i<records.length;i++){
					    	        		var ccsa = records[i] //遍历每一行
					    	        		businessKey[i] = ccsa.data.carInfoCode;
					    	        	}
					    	        	
					    	        	var uploadCarBXAttachmentPanel = win.down('uploadAttachmentPanel');
					    	    		if(uploadCarBXAttachmentPanel!=null){
					    	    			var attachmentStore = uploadCarBXAttachmentPanel.getViewModel().getStore('attachmentStore');
					    	    			if(attachmentStore!=null){
					    	    				attachmentStore.load({params:{bizEntityCode:businessKey, bizEntityType:businessType}});
					    	    			}
					    	    			var typeStore = uploadCarBXAttachmentPanel.getViewModel().getStore('attachmentTypeStore');
					    	    	    	typeStore.load({params:{type:businessType}});
					    	    	    	var form = uploadCarBXAttachmentPanel.down('form');
					    	    	    	if(form!=null){
					    	    	    		form.getForm().setValues({businessKey:businessKey,businessType:businessType,businessTypeName:businessTypeName});
					    	    	    	}
					    	    	    	var addBtn = uploadCarBXAttachmentPanel.down('button');
					    	    	    	if (addBtn) {
					    	    	    		addBtn.setHidden(true);
					    	    	    	}
					    	    		}*/
				    	    			
					    	    	},
					        	});
							}
						}
					}
			    }
			});
		}
    },
    // 新增车辆及保险信息（订单详情）
    onAddContractCarOrderDetailClick : function () {
    	var win = this.getView();
    	var orderListDetailPanel = win.down('orderlistdetails');
    	var form = orderListDetailPanel.lookupReference('taskDetailForm');
		var contractCarOrderId = form.getForm().getValues().id
		var olPreSaleOrderNo = form.getForm().getValues().olPreSaleOrderNo;
		var carProductName = form.getForm().getValues().contractCarName;
		var carProductDisplayName = form.getForm().getValues().contractCarDisplayName;
		var orderCount = form.getForm().getValues().orderCount;
		var contractCarOrderDetailGrid = win.lookupReference('contractCarOrderDetailGrid');
		var ccodStore = contractCarOrderDetailGrid.getStore();
		if (ccodStore.count()>=orderCount) {
			Ext.Msg.alert('提示','调配车辆个数不能多于订单数量！');
			return;
		}
		var newModel = new Evcorp.model.ContractCarOrderDetail({ 
        	id:null, 
        	contractCarOrderId:contractCarOrderId, 
        	olPreSaleOrderNo:olPreSaleOrderNo,
        	carProductName:carProductName,
        	carProductDisplayName:carProductDisplayName,
    		});
		ccodStore.insert(0, newModel);
        contractCarOrderDetailGrid.editingPlugin.startEditByPosition({ row: 0, column: 0 });
        contractCarOrderDetailGrid.getSelectionModel().select(newModel);
    },
    
    // 保存车辆及保险信息（订单详情）
    onSaveContractCarOrderDetailClick : function () {
    	var win = this.getView();
    	var orderListDetailPanel = win.down('orderlistdetails');
    	var form = orderListDetailPanel.lookupReference('taskDetailForm');
    	var orderCount = form.getForm().getValues().orderCount;
    	var olPreSaleOrderNo = form.getForm().getValues().olPreSaleOrderNo;
    	var contractCarOrderId = form.getForm().getValues().id;
       
    	var gridStore = this.getView().getViewModel().getStore('contractCarOrderDetailListStore');
 	   var modifyArray = gridStore.getModifiedRecords();
 	   if(modifyArray.length == 0){
 		   Ext.Msg.alert('提示','你未进行任何添加或修改操作');
 		   return false;
 	   } else if (gridStore.data.length>orderCount) {
 		   Ext.Msg.alert('提示','调配车辆个数不能多于订单数量！');
 		   return false;
 	   } else {
 		   var flag = 0;
 		   Ext.each(modifyArray, function(obj,index){
 			   var id = obj.get('id');
			   if (!id || parseInt(id)<0) { // 新增
				   if (!obj.get('olPreSaleOrderNo')) {
					   flag = 1;
					   Ext.Msg.alert("提示",'请先选择或新建一条订单记录后再编辑车辆及保险信息。');
					   return false;
				   }
			   } else {
				   if (!obj.get('contractCarOrderId')) {
					   flag = 1;
					   Ext.Msg.alert("提示",'请先选择或新建一条订单记录后再编辑车辆及保险信息。');
					   return false;
				   }
			   }
			   if(!obj.get('carInfoId') || !obj.get('carInfoCode') || !obj.get('carFrameNo')){
				   flag = 2;
				   Ext.Msg.alert('提示','缺乏必要配车信息！');
				   return false;
			   }
 		   });
 		   if(flag == 0) {
 			   gridStore.sync({
 					success: function(ba,op){
 					   Ext.Msg.alert("提示","保存车辆及保险信息成功！");
 					   gridStore.reload();
 				   },
 				   failure: function(ba,op){
 					   Ext.Msg.alert("提示","保存车辆及保险信息失败："+ba.exceptions[0].getError());
 				   }
 			   }); 
 		   }
	   }
    },
    
    // 配车
    onAllocationCarClick : function () {
    	var win = this.getView();
    	var orderListDetailPanel = win.down('orderlistdetails');
    	var form = orderListDetailPanel.lookupReference('taskDetailForm');
		var carProductCode = form.getForm().getValues().carProductCode;
		var contractCarOrderDetailGrid = win.lookupReference('contractCarOrderDetailGrid');
		var gm = contractCarOrderDetailGrid.getSelectionModel().getSelection();
        var window = Ext.create({
			xtype : 'carInfolistwin',
			width : 1000,
			closeAction : 'destroy'
		});
		window.getViewModel().getStore('carInfoGridWinStore').getProxy().extraParams = {
			contractCarCode : carProductCode,
			status : 1, // 未租
		};
		window.show();
		window.down('#selectCarInfoId').on({
			click : function () {
				var carInfoWinGrid = Ext.ComponentQuery.query('#carInfoWinGridId')[0];
				var seletedModels = carInfoWinGrid.getSelectionModel().getSelection();
				if (!seletedModels || seletedModels.length<=0) {
					Ext.Msg.alert("提示",'请选择车辆信息！');
					return;
				}
				
//				var suppleAgreementNo = seletedModels[0].get('suppleAgreementNo'); //补充协议编号
				var carProductName = seletedModels[0].get('carProductName'); //车辆名称
				var carProductDisplayName = seletedModels[0].get('carProductDisplayName'); // 车辆显示名称
				var carFrameNo = seletedModels[0].get('carFrameNo'); //车架号
				var carLicensePlate = seletedModels[0].get('carLicensePlate'); //车牌号码
				var carEngineNo = seletedModels[0].get('carEngineNo'); //发动机号
				var carDriveLicenseNo = seletedModels[0].get('carDriveLicenseNo'); //行驶证号
				var initMileage = seletedModels[0].get('initMileage'); //初始里程数
				var insuranceCompany = seletedModels[0].get('insuranceCompany'); //保险公司
				var strongInsuranceId = seletedModels[0].get('strongInsuranceId'); //交强险保单ID
				var strongInsuranceNo = seletedModels[0].get('strongInsuranceNo'); //交强险保单编号
				var strongInsuranceStartDate = seletedModels[0].get('strongInsuranceStartDate'); //交强险起始日期
				var strongInsuranceEndDate = seletedModels[0].get('strongInsuranceEndDate'); //交强险终止日期
				var gpsDeviceNo = seletedModels[0].get('gpsDeviceNo'); //GPS设备编号
				var commercialInsuranceId = seletedModels[0].get('commercialInsuranceId'); //商业险保单ID
				var commercialInsuranceNo = seletedModels[0].get('commercialInsuranceNo'); //商业险保单编号
				var commercialInsuranceStartDate = seletedModels[0].get('commercialInsuranceStartDate'); //商业险起始日期
				var commercialInsuranceEndDate = seletedModels[0].get('commercialInsuranceEndDate'); //商业险终止日期
				var carInfoCode = seletedModels[0].get('carInfoCode'); // 车辆资产编号
				var carInfoId = seletedModels[0].get('id'); // 车辆资产ID
				
				var carInfo=gm[0].data;
				var gridStore=contractCarOrderDetailGrid.getStore().getById(gm[0].data.id);
//				gridStore.set('suppleAgreementNo',suppleAgreementNo);
				gridStore.set('carInfoId',carInfoId);
				gridStore.set('carInfoCode',carInfoCode);
				gridStore.set('carFrameNo',carFrameNo);
				gridStore.set('carLicensePlate',carLicensePlate);
				gridStore.set('carEngineNo',carEngineNo);
				gridStore.set('carDriveLicenseNo',carDriveLicenseNo);
				gridStore.set('initMileage',initMileage);
				gridStore.set('insuranceCompany',insuranceCompany);
				gridStore.set('strongInsuranceId',strongInsuranceId);
				gridStore.set('strongInsuranceNo',strongInsuranceNo);
				gridStore.set('strongInsuranceStartDate',strongInsuranceStartDate?strongInsuranceStartDate.substring(0, 10):null);
				gridStore.set('strongInsuranceEndDate',strongInsuranceEndDate?strongInsuranceEndDate.substring(0, 10):null);
				gridStore.set('gpsDeviceNo',gpsDeviceNo);
				gridStore.set('commercialInsuranceId',commercialInsuranceId);
				gridStore.set('commercialInsuranceNo',commercialInsuranceNo);
				gridStore.set('commercialInsuranceStartDate',commercialInsuranceStartDate?commercialInsuranceStartDate.substring(0, 10):null);
				gridStore.set('commercialInsuranceEndDate',commercialInsuranceEndDate?commercialInsuranceEndDate.substring(0, 10):null);
				window.close();
			}
		})

    },
    
    // 取消配车
    onCancelAllocationCarClick : function() {
		var g = this.lookupReference('contractCarOrderDetailGrid');
		var gm = g.getSelectionModel().getSelection();
		var id = gm[0].data.id;
		var contractCarOrderId = gm[0].data.contractCarOrderId;
		var gridStore=g.getStore();
		var selectGridStore=gridStore.getById(id);
		var contractCarSuppleAgreementListStore = this.getViewModel().getStore('contractCarSuppleAgreementListStore');
    	if (id && id>=0) {
    		Ext.MessageBox.confirm('提示', '确定删除该记录?', function(btn) {
				if (btn != 'yes') {
					return;
				}
				// 删除操作
				Ext.Ajax.request({
					url : 'ccOrder/deleteContractCarOrderDetail',
					params : {
						'id' : id,
					},
					async : false,
					success : function(response) {
						if(response.status==200 && response.statusText=='OK'){
							Ext.Msg.alert("提示","取消配车成功！")
							gridStore.reload();
							// 加载附件补充协议
				    		contractCarSuppleAgreementListStore.load({
						    	params:{ contractCarOrderId: contractCarOrderId  }
					    	});
						}else{
	                		Ext.Msg.alert("提示","系统错误,操作失败!");
	                	}
					}
				});
			});
    	} else {
    		gridStore.remove(gm);
    	}
	},
	insuranceCompanyEditor:function(value){
		if(value!=undefined){
			var win = this.getView();
			var insuranceCompanyStore=win.getViewModel().getStore('insuranceCompanyStore');
			return insuranceCompanyStore.findRecord('code', value).data.nameCn;
		}
	},
	onSubmitClick:function(){
		var win = this.getView();
    	var taskId = win.taskId;
    	var processInstanceId = win.processInstanceId;
    	var businessKey = win.businessKey;
    	var comment = this.lookupReference('commentForm').getForm().getValues().comment;
    	win.mask("请稍等，正在处理中...","x-mask-loading");
    	Ext.Ajax.request({
			url : 'ccOrder/allotSubmit',
			params : {
				taskId : taskId,
				processInstanceId : processInstanceId,
				businessKey : businessKey,
				comment : comment
			},
            method: 'POST',	
			success : function(data) {
				win.unmask();
				if(data.responseText=='success'){
					Ext.Msg.alert("提示",'提交成功',function(){
		    			var myActiveTaskGrid = Ext.ComponentQuery.query('#myActiveTaskGrid')[0];
		    			var myActiveTaskStore = myActiveTaskGrid.getStore();
		    			myActiveTaskStore.loadPage(1 ,{"start":0,"limit":20});
		    			var eastPanel = Ext.ComponentQuery.query("#eastPanelId")[0];
		    	        eastPanel.removeAll();
		    			win.close();
		    		});
				}else{
					Ext.Msg.alert("提示",'配车数量与订单数量不符,提交失败')
				}
			}
		});
	},
	onUploadCarBXClick : function (grid, rowIndex) {
    	var ccsaGridStore = grid.getStore();
        var rec = ccsaGridStore.getAt(rowIndex);
        var id = rec.get('id');
        var carInfoCode = rec.get('carInfoCode');
        if (!id || id<0) {
        	Ext.Msg.alert('提示','请先保存补充协议后再进行上传操作！');
        	return;
        }
        if (!carInfoCode) {
        	Ext.Msg.alert('提示','请先配车后再进行上传操作！');
        }
    	var businessKey = carInfoCode; // 附件业务实体编号：车辆资产编号
    	var businessType = 'attachBizEntityType_ZCGL'; // 附件业务实体类型：资产管理代码
    	var businessTypeName = '资产管理'; // 附件业务实体类型名称：资产管理（理论上从字典表去nameCn字段）
    	
		var newModel = new Evcorp.model.Attachment({
			bizEntityCode:businessKey,
			bizEntityType:businessType,
			bizEntityTypeName:businessTypeName,
			id:null
		});
		
		var uploadCarBXAttachmentPanel = this.lookupReference('uploadCarBXAttachmentPanel');
		var gridStore = uploadCarBXAttachmentPanel.viewModel.data.attachmentStore;
		gridStore.insert(0,newModel);
    }
});
