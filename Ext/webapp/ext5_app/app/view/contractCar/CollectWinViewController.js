/*
 * File: app/view/menu/menuPanelViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Evcorp.view.contractCar.CollectWinViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.CollectWin',
    initWindow:function(){
    	var win = this.getView();
    	var olPreSaleOrderNo = '';
    	var store = win.getViewModel().getStore('detail');
		if(store!=null){
			store.load({
				params:{businessKey:win.businessKey},
				callback: function(rr, operation, success) {
					if(success){
						olPreSaleOrderNo = rr[0].data.olPreSaleOrderNo;
						var orderListDetailPanel = win.down('orderlistdetails');
						var orderDetailTab = orderListDetailPanel.lookupReference('orderDetailTab');
						orderDetailTab.tabBar.items.items[3].hide();
						if(orderListDetailPanel!=null){
							var contractCarOrderDetailListStore = orderListDetailPanel.getViewModel().getStore('contractCarOrderDetailListStore');
							if(contractCarOrderDetailListStore!=null)
								contractCarOrderDetailListStore.load({params:{orderNo:win.businessKey}});
							var contractCarOrderPayLogListStore = orderListDetailPanel.getViewModel().getStore('contractCarOrderPayLogListStore');
				    		if(contractCarOrderPayLogListStore!=null)
								contractCarOrderPayLogListStore.load({params:{orderNo: win.businessKey}});
				    		var replaymentPlanListStore = orderListDetailPanel.getViewModel().getStore('replaymentPlanListStore');
				    		if(replaymentPlanListStore!=null)
					    		replaymentPlanListStore.load({params:{orderNo: win.businessKey}});
							var contractCarSuppleAgreementListStore = orderListDetailPanel.getViewModel().getStore('contractCarSuppleAgreementListStore');
							if(contractCarSuppleAgreementListStore!=null){
								// 加载附件补充协议
					    		contractCarSuppleAgreementListStore.load({
					    	    	params:{orderNo:win.businessKey},
					    	    	callback: function(records, options, success){
					    	    		// 加载附件pannel
					    	        	var businessKey = [olPreSaleOrderNo]; // 附件业务实体编号：租赁合同编号
					    	        	var businessType = 'attachBizEntityType_ZLHT'; // 附件业务实体类型：租赁合同代码
					    	        	var businessTypeName = '租赁合同'; // 附件业务实体类型名称：租赁合同（理论上从字典表去nameCn字段）
					    	        	
					    	        	for(var i =0;records && i<records.length;i++){
					    	        		var ccsa = records[i] //遍历每一行
					    	        		businessKey[i+1] = ccsa.data.suppleAgreementNo;
					    	        	}
				    	    			var contractattachmentStore = orderListDetailPanel.getViewModel().getStore('contractattachmentStore');
				    	    			if(contractattachmentStore!=null){
				    	    				contractattachmentStore.load({params:{bizEntityCode:businessKey,bizEntityType:businessType}});
				    	    			}
				    	    			var contracttypeStore = orderListDetailPanel.getViewModel().getStore('contractattachmentTypeStore');
				    	    			contracttypeStore.load({params:{type:businessType}});
					    	    		
				    	    	    	var businessKey2 = olPreSaleOrderNo; // 附件业务实体编号：征信材料编号
				        	        	var businessType2 = 'attachBizEntityType_ZXCL'; // 附件业务实体类型：征信材料代码
				        	        	var businessTypeName2 = '征信材料'; // 附件业务实体类型名称：征信材料（理论上从字典表去nameCn字段
				        	        	
				        	        	var creditattachmentStore = orderListDetailPanel.getViewModel().getStore('creditattachmentStore');
				    	    			if(creditattachmentStore!=null){
				    	    				creditattachmentStore.load({params:{bizEntityCode:businessKey2,bizEntityType:businessType2}});
				    	    			}
				    	    			var credittypeStore = orderListDetailPanel.getViewModel().getStore('creditattachmentTypeStore');
				    	    			credittypeStore.load({params:{type:businessType2}});
				    	    			
				    	    			var uploadAttachmentPanel = win.down('uploadAttachmentPanel');
				        				if(uploadAttachmentPanel!=null){
				        					var attachmentStore = uploadAttachmentPanel.getViewModel().getStore('attachmentStore');
				        					if(attachmentStore!=null){
				        						attachmentStore.load({params:{bizEntityCode:businessKey2,bizEntityType:businessType2}});
				        					}
				        					var typeStore = uploadAttachmentPanel.getViewModel().getStore('attachmentTypeStore');
				        			    	typeStore.load({params:{type:businessType2}});
				        			    	var form = uploadAttachmentPanel.down('form');
				        			    	if(form!=null){
				        			    		form.getForm().setValues({businessKey:businessKey2,businessType:businessType2,businessTypeName:businessTypeName2});
				        			    	}
				        				}
					    	    	},
					        	});
							}
						}
					}
			    }
			});
		}
    },
    onSubmitClick:function(){
    	var win = this.getView();
    	var taskId = win.taskId;
    	var processInstanceId = win.processInstanceId;
    	var businessKey = win.businessKey;
    	win.mask("请稍等，正在处理中...","x-mask-loading");
    	Ext.Ajax.request({
			url : 'ccOrder/collectSubmit',
			params : {
				taskId : taskId,
				processInstanceId : processInstanceId,
				businessKey : businessKey
			},
            method: 'POST',	
			success : function(data) {
				win.unmask();
				if(data.responseText=='success'){
					Ext.Msg.alert("提示",'提交成功',function(){
		    			var myActiveTaskGrid = Ext.ComponentQuery.query('#myActiveTaskGrid')[0];
		    			var myActiveTaskStore = myActiveTaskGrid.getStore();
		    			myActiveTaskStore.loadPage(1 ,{"start":0,"limit":20});
		    			var eastPanel = Ext.ComponentQuery.query("#eastPanelId")[0];
		    	        eastPanel.removeAll();
		    			win.close();
		    		});
				}
			}
		});
    },
    onDeleteClick:function(){
    	Ext.MessageBox.prompt("取消订单流程","原因：",function(bu,txt){ 
    		if(bu=='ok'){
    			if(txt==null||txt==''){
    				Ext.Msg.alert("提示",'请填写取消订单原因')
    			}else{
    				var win = this.getView();
        	    	var taskId = win.taskId;
        	    	var processInstanceId = win.processInstanceId;
        	    	var businessKey = win.businessKey;
        	    	win.mask("请稍等，正在处理中...","x-mask-loading");
        	    	Ext.Ajax.request({
        				url : 'ccOrder/deleteProcessInstance',
        				params : {
        					processInstanceId : processInstanceId,
        					deleteReason:txt,
        					businessKey:businessKey
        				},
        	            method: 'POST',	
        				success : function(data) {
        					win.unmask();
        					if(data.responseText=='success'){
        						Ext.Msg.alert("提示",'取消订单流程成功',function(){
        			    			var myActiveTaskGrid = Ext.ComponentQuery.query('#myActiveTaskGrid')[0];
        			    			var myActiveTaskStore = myActiveTaskGrid.getStore();
        			    			myActiveTaskStore.loadPage(1 ,{"start":0,"limit":20});
        			    			var eastPanel = Ext.ComponentQuery.query("#eastPanelId")[0];
        			    	        eastPanel.removeAll();
        			    			win.close();
        			    		});
        					}
        				}
        			});
    			}
    		}else{
    			return;
    		}
    	}); 
    },
    onEditBankCardClick:function(){
   	 var twin = this.getView();
   	 var win = Ext.create('Evcorp.view.contractCar.CustomerInfoWin');
   	 win.on('beforeshow',function(){
       	 var orderListDetailPanel = twin.down('orderlistdetails');
     		 var customerName = orderListDetailPanel.lookupReference('taskDetailForm').getForm().getValues().customerName;
     		 var store = win.getViewModel().getStore('customer');
     		 store.load({
				params:{cusName:customerName},
				callback: function(records, operation, success) {
					if(success){
						win.down('form').loadRecord(records[0]);
						var customerId = records[0].data.id;
						var uploadBankCardInfoAttachmentPanel = win.lookupReference('uploadBankCardInfoAttachmentPanel');
						var bankCardInfoListStore = win.getViewModel().getStore('bankCardInfoListStore');
			    		bankCardInfoListStore.load({
					    	params:{ customerId: customerId },
			    	    	callback: function(records, options, success){
			    	    		// 加载支付信息附件
			    	        	var businessKey = []; // 附件业务实体编号：银行卡卡号
			    	        	var businessType = 'attachBizEntityType_YHK'; // 附件业务实体类型：银行卡代码
			    	        	var businessTypeName = '银行卡'; // 附件业务实体类型名称：银行卡（理论上从字典表去nameCn字段）
			    	        	
			    	        	for(var i =0;records && i<records.length;i++){
			    	        		var r = records[i] //遍历每一行
			    	        		if (r.data.bankAccountNo) {
			    	        			businessKey[i] = r.data.bankAccountNo;
			    	        		}
			    	        	}
			    	        	
			    	    		if(uploadBankCardInfoAttachmentPanel!=null){
			    	    			var attachmentStore = uploadBankCardInfoAttachmentPanel.getViewModel().getStore('attachmentStore');
			    	    			if(attachmentStore!=null){
			    	    				attachmentStore.load({params:{bizEntityCode:businessKey, bizEntityType:businessType}});
			    	    			}
			    	    			var typeStore = uploadBankCardInfoAttachmentPanel.getViewModel().getStore('attachmentTypeStore');
			    	    	    	typeStore.load({params:{type:businessType}});
			    	    	    	var form = uploadBankCardInfoAttachmentPanel.down('form');
			    	    	    	if(form!=null){
			    	    	    		form.getForm().setValues({businessKey:businessKey,businessType:businessType,businessTypeName:businessTypeName});
			    	    	    	}
			    	    	    	// 隐藏新增按钮
			    	    	    	var addBtn = uploadBankCardInfoAttachmentPanel.down('button');
			    	    	    	if (addBtn) {
			    	    	    		addBtn.setHidden(true);
			    	    	    	}
			    	    		}
			    	    		
			    	    	},
				    	});
					}
			    }
			});
   	 })
   	 win.show();
    },
});
